{"version":3,"sources":["services/auth.js","services/fetch.js","services/domains/user.js","services/domains/restaurant.js","services/domains/dish.js","services/domains/place.js","services/domains/order.js","store/actions/user.js","store/actions/restaurant.js","store/actions/dish.js","store/actions/notifications.js","store/actions/order.js","store/constants.js","store/reducers/user.js","store/reducers/restaurant.js","store/reducers/dish.js","store/reducers/notifications.js","store/actions/place.js","store/reducers/place.js","store/reducers/order.js","store/reducers/index.js","store/commands/notifications.js","utils/errors.js","utils/notifications.js","store/commands/user.js","store/commands/restaurant.js","store/commands/product.js","store/commands/place.js","store/commands/order.js","store/selectors/user.js","store/selectors/restaurant.js","store/selectors/place.js","store/selectors/dish.js","store/selectors/notifications.js","store/selectors/order.js","components/ProtectedRoute/index.js","routes.js","components/ProducerProtectedRoute/index.js","components/Loading/index.js","components/Restaurant/index.js","components/RestaurantsList/index.js","components/Search/index.js","components/OrderStepper/index.js","pages/Restaurants/index.js","components/OrderForm/index.js","pages/MakeOrder/index.js","components/DishCountDialog/index.js","components/DishCard/index.js","components/Dish/index.js","components/DishesList/index.js","components/OrderPopover/index.js","pages/Dishes/index.js","components/SnackBar/index.js","components/SignInForm/index.js","hooks/useRedirectWhenAuthorized.js","hooks/useControledInput.js","pages/SignIn/index.js","components/SignUpForm/index.js","pages/SignUp/index.js","components/ActionCard/index.js","pages/Home/index.js","components/TabPanels/index.js","components/SignOutButton/index.js","components/UserInfo/index.js","components/StartAsProvider/index.js","components/ChangePasswordForm/index.js","pages/Account/index.js","components/AddPlaceForm/index.js","pages/AddPlace/index.js","components/PlacesList/index.js","components/ProductsList/index.js","components/ProductListByPlaces/index.js","components/ProducerOrders/index.js","pages/BusinessAccount/index.js","components/AddProductForm/index.js","pages/AddProduct/index.js","components/OrderHistoryList/index.js","pages/OrderHistory/index.js","components/AppBar/logo.svg","components/AppBar/index.js","components/Notifications/index.js","index.js","store/index.js","services/index.js","App.js"],"names":["AuthSingleton","resetToken","token","writeToken","getStorageData","JSON","parse","localStorage","getItem","storageKey","setStorageData","data","setItem","stringify","readToken","isStorageDataValid","error","Error","getAuthHeader","this","FetchFactory","baseUrl","callFetch","url","options","fetch","get","auth","headers","method","Headers","Auth","put","body","post","postForm","formData","delete","UserService","process","REACT_APP_USER_API_BASE_URL","authFetch","REACT_APP_AUTH_API_BASE_URL","signUp","user","a","async","response","ok","email","password","signIn","handleInvalidResponse","json","loadUser","firstName","first_name","lastName","last_name","rest","signOut","changeUserRole","role","changePassword","oldPassword","newPassword","payload","RestaurantService","createRestaurant","restaurant","Promise","resolve","reject","restaurants","setTimeout","getRestaurants","id","image","name","description","address","getLocations","DishService","getDishes","restaurantId","title","price","PlaceService","REACT_APP_PLACE_API_BASE_URL","_createFormData","FormData","Object","entries","forEach","key","value","append","addPlace","fetchPlaces","deletePlace","addProduct","deleteProduct","getProducts","products","OrderService","REACT_APP_ORDER_API_BASE_URL","sendOrder","getOrdersByCustomer","createActions","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","signInStart","signInSuccess","signInFailure","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signUpStart","signUpSuccess","signUpFailure","signOutSuccess","SIGN_OUT_SUCCESS","CHANGE_USER_ROLE_START","CHANGE_USER_ROLE_SUCCESS","CHANGE_USER_ROLE_FAILURE","changeUserRoleStart","changeUserRoleSuccess","changeUserRoleFailure","CHANGE_PASSWORD_START","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","changePasswordStart","changePasswordSuccess","changePasswordFailure","GET_LOCATIONS_START","GET_LOCATIONS_SUCCESS","locations","GET_LOCATIONS_FAIL","getLocationsStart","getLocationsSuccess","getLocationsFail","CREATE_RESTAURANT_START","CREATE_RESTAURANT_SUCCESS","CREATE_RESTAURANT_FAIL","createRestaurantStart","createRestaurantSuccess","createRestaurantFail","DELETE_RESTAURANT_START","DELETE_RESTAURANT_SUCCESS","DELETE_RESTAURANT_FAIL","deleteRestaurantStart","deleteRestaurantSuccess","deleteRestaurantFail","UPDATE_RESTAURANT_START","UPDATE_RESTAURANT_SUCCESS","UPDATE_RESTAURANT_FAIL","updateRestaurantStart","updateRestaurantSuccess","updateRestaurantFail","GET_RESTAURANT_START","GET_RESTAURANT_SUCCESS","GET_RESTAURANT_FAIL","getRestaurantStart","getRestaurantSuccess","getRestaurantFail","GET_RESTAURANTS_START","GET_RESTAURANTS_SUCCESS","GET_RESTAURANTS_FAIL","getRestaurantsStart","getRestaurantsSuccess","getRestaurantsFail","GET_DISHES_START","GET_DISHES_SUCCESS","dishes","GET_DISHES_FAIL","PICK_DISH","dishId","count","REMOVE_DISH","ADD_PRODUCT_START","ADD_PRODUCT_FINISH","DELETE_PRODUCT_START","DELETE_PRODUCT_FINISH","getDishesStart","getDishesSuccess","getDishesFail","pickDish","removeDish","addProductStart","addProductFinish","deleteProductStart","deleteProductFinish","ADD_NOTIFICATION","notification","REMOVE_NOTIFICATION","addNotification","removeNotification","SEND_ORDER_START","SEND_ORDER_FINISH","GET_ORDERS_BY_CUSTOMER_START","GET_ORDERS_BY_CUSTOMER_SUCCESS","orders","GET_ORDERS_BY_CUSTOMER_FAIL","sendOrderStart","sendOrderFinish","getOrdersByCustomerStart","getOrdersByCustomerSuccess","getOrdersByCustomerFail","ResourseStatus","initialState","fromJS","status","undefined","userReducer","handleActions","combineActions","state","updateIn","store","restaurantReducer","set","selected","dishReducer","setIn","getIn","x","List","notificationsReducer","push","deleteId","filter","ADD_PLACE_START","ADD_PLACE_FINISH","addPlaceStart","addPlaceFinish","DELETE_PLACE_START","DELETE_PLACE_FINISH","deletePlaceStart","deletePlaceFinish","FETCH_PLACES_START","FETCH_PLACES_SUCCESS","places","FETCH_PLACES_FAILURE","fetchPlacesStart","fetchPlacesSuccess","fetchPlacesFailure","list","placeReducer","ordersByCustomer","orderReducer","rootReducer","combineReducers","dish","notifications","place","order","showNotification","type","message","dispatch","uuid","ErrorType","getErrorTypeByError","trim","getErrorMessageByType","errorType","NotificationTypes","redirect","login","_getState","userAPI","userData","restaurantAPI","placeAPI","rawPlaces","map","product_name","orderAPI","selectUserState","selectUserData","createSelector","toJS","selectUserRole","selectUserId","selectIsUserProducer","selectIsAuthenticated","selectIsUserDataLoading","selectIsUserErrorExist","Boolean","selectUserDataErrorMessage","isError","selectRestaurantState","selectAllLocations","restaurantStore","selectPlaceState","selectPlaceStatus","placeState","selectIsPlacesLoading","selectPlaces","selectProducerPlaces","userId","selectDishesState","getAllDishes","selectAllDishes","selectIsDishesLoading","dishesStore","selectPickedDishes","result","find","Number","Map","selectDishesByPlace","selectNotifications","selectOrderState","selectIsCustomerOrdersLoading","orderStore","selectCustomerOrders","ProtectedRoute","Component","component","isAuthenticated","useSelector","render","props","to","pathname","from","location","routes","home","orderHistory","account","businessAccount","placeAdd","productAdd","ProducerProtectedRoute","isProducer","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","Loading","classes","Container","maxWidth","className","CircularProgress","size","fontWeight","alignSelf","card","padding","spacing","margin","minWidth","color","palette","text","secondary","cursor","backgroundColor","background","default","content","position","distance","top","right","Restaurant","onDelete","asLink","Card","Grid","container","direction","style","item","xs","alt","src","Typography","variant","gutterBottom","fontSize","marginLeft","IconButton","onClick","generatePath","textAlign","RestaurantsList","searchValue","r","toLowerCase","includes","marginBottom","grey","zIndex","overflow","search","input","flex","iconButton","button","width","formControl","selectEmpty","marginTop","Search","setSearchValue","useState","setLocation","rating","setRating","Paper","InputBase","placeholder","inputProps","onChange","target","aria-label","FormControl","Select","displayEmpty","MenuItem","disabled","index","FormHelperText","OrderStepper","activeStep","Stepper","alternativeLabel","label","Step","StepLabel","flexDirection","Restaurants","useDispatch","isLoading","useEffect","left","transform","row","field","OrderForm","orderInfo","mail","history","useHistory","useCallback","setName","setEmail","Date","time","setTime","comment","setComment","noValidate","autoComplete","onSubmit","e","preventDefault","rawProducts","placeId","product","readyDate","toISOString","slice","replace","TextField","utils","DateFnsUtils","ampm","inputVariant","fullWidth","date","multiline","rows","Button","setOrderInfo","DishCountDialog","isOpen","setOpen","setCount","max","click","Dialog","open","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","min","maximum","DialogActions","checkbox","DishCard","handleChange","checked","Checkbox","Dish","setChecked","isDialogOpen","setIsDialogOpen","orderedDishes","newChecked","DishesList","parentId","useLocation","split","place_id","bottom","primary","main","contrastText","boxShadow","shadows","paddingLeft","OrderPopover","countToDelete","setCountToDelete","maxInDialogValue","setMaxInDialogValue","activeDish","setActiveDish","deleteDish","Chip","marginRight","setDish","reduce","acc","Dishes","match","params","Fade","in","variantIcon","success","CheckCircleIcon","ErrorIcon","info","InfoIcon","green","icon","iconVariant","opacity","SnackBar","hidden","anchorOrigin","handleClose","_e","reason","Icon","Snackbar","autoHideDuration","onClose","SnackbarContent","action","paper","avatar","form","submit","SignInForm","CssBaseline","Avatar","required","autoFocus","FormControlLabel","control","Link","href","useRedirectWhenAuthorized","useControlledInput","defaultValue","setValue","SignIn","errorMessage","vertical","horizontal","SignUpForm","sm","ActionCard","caption","onAction","CardContent","grid","flexGrow","Home","path","iconProps","homeActions","justify","tabs","borderRight","divider","getTabId","getTabPanelId","TabPanel","children","other","fixed","TabPanels","panels","footer","React","Tabs","orientation","newValue","Tab","SignOutButton","onSignOut","indicator","relativeWrap","Indicator","isValid","commonPanels","ListItem","ListItemAvatar","ListItemText","oldPswdValue","onOldPswdChange","newPswdValue","onNewPswdChange","confirmPswdValue","onConfirmPswdChange","isNewPswdValid","isConfirmPswdValid","isButtonDisabled","length","customerPanels","wrap","repeat","producerPanels","Account","concat","uploadContainer","fileName","AddPlaceForm","placeName","placeImage","isFileLoading","setIsFileLoading","setFileName","file","currentTarget","files","reader","FileReader","addEventListener","readAsDataURL","isProcessing","accept","htmlFor","AddPlace","ProductsList","createOnClick","createOnDelete","dishesByPlace","entry","BusinessAccount","AddProductForm","productName","productImage","productPrice","AddProduct","OrderHistoryList","ordersHistory","keys","TableContainer","Table","TableHead","TableRow","header","TableCell","TableBody","sort","b","order_date","OrderHistory","customerOrders","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","stroke","strokeWidth","points","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","logo","wrapper","navIcon","navData","link","getNavData","Bar","navigation","useMemo","AppBar","Toolbar","Notifications","preloadedState","services","dishAPI","composedEnhancers","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","createStore","then","catch","configureStore","ReactDOM","exact","SignUp","MakeOrder","document","getElementById"],"mappings":"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","file":"static/js/main.476eb80b.chunk.js","sourcesContent":["class AuthSingleton {\n    static storageKey = 'food-hub-client';\n\n    constructor() {\n        const { token, error } = this.readToken();\n        if (token && !error) {\n            this.token = token;\n        }\n    }\n\n    resetToken = token => {\n        this.token = token;\n        this.writeToken(token);\n    }\n\n    getStorageData = () => JSON.parse(localStorage.getItem(AuthSingleton.storageKey));\n\n    setStorageData = data => localStorage.setItem(AuthSingleton.storageKey, JSON.stringify(data))\n\n    readToken = () => {\n        try {\n            const data = this.getStorageData();\n            if (this.isStorageDataValid(data)) {\n                return { ...data, error: null };\n            } else {\n                return { error: new Error('Invalid token') };\n            }\n        } catch (error) {\n            return { error };\n        }\n    };\n\n    writeToken = token => {\n        try {\n            const data = this.getStorageData();\n            this.setStorageData({ ...data, token });\n            this.token = token;\n            return { error: null };\n        } catch (error) {\n            return { error };\n        }\n    }\n\n    getAuthHeader = () => ({\n        'Authorization': `Bearer ${this.token}`,\n    })\n\n    isStorageDataValid = data => (\n        data && typeof data === 'object' &&\n        'token' in data && typeof data.token === 'string'\n    );\n}\n\nexport default new AuthSingleton();\n","import Auth from './auth';\n\nexport default function FetchFactory(baseUrl) {\n    const callFetch = (url, options) => fetch(`${baseUrl}${url}`, options);\n\n    return {\n        get: (url, { auth = true, headers = {} } = {}) =>\n            callFetch(url, {\n                method: 'GET',\n                headers: new Headers({\n                    ...headers,\n                    ...(auth ? Auth.getAuthHeader() : {}),\n                }),\n            }),\n        put: (url, body, { auth = true, headers = {} } = {}) =>\n            callFetch(url, {\n                method: 'PUT',\n                body: JSON.stringify(body),\n                headers: new Headers({\n                    ...headers,\n                    ...{ 'Content-Type': 'application/json' },\n                    ...(auth ? Auth.getAuthHeader() : {}),\n                }),\n            }),\n        post: (url, body, { auth = true, headers = {} } = {}) =>\n            callFetch(url, {\n                method: 'POST',\n                body: JSON.stringify(body),\n                headers: new Headers({\n                    ...headers,\n                    ...{ 'Content-Type': 'application/json' },\n                    ...(auth ? Auth.getAuthHeader() : {}),\n                }),\n            }),\n        postForm: (url, formData, { auth = true, headers = {} } = {}) =>\n            callFetch(url, {\n                method: 'POST',\n                body: formData,\n                headers: new Headers({\n                    ...headers,\n                    ...(auth ? Auth.getAuthHeader() : {}),\n                }),\n            }),\n        delete: (url, { auth = true, headers = {} } = {}) =>\n            callFetch(url, {\n                method: 'DELETE',\n                headers: new Headers({\n                    ...headers,\n                    ...(auth ? Auth.getAuthHeader() : {}),\n                }),\n            }),\n    };\n}\n","import Auth from '../auth';\nimport FetchFactory from '../fetch';\n\nexport default class UserService {\n    static auth = Auth;\n\n    fetch = FetchFactory(`${process.env.REACT_APP_USER_API_BASE_URL}/user`);\n    authFetch = FetchFactory(`${process.env.REACT_APP_AUTH_API_BASE_URL}/auth`);\n\n    signUp = async user => {\n        const response = await this.authFetch.post('/signUp', user, {\n            auth: false,\n        });\n        if (response.ok) {\n            const { email, password } = user;\n            return this.signIn(email, password);\n        } else {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    signIn = async (email, password) => {\n        const response = await this.authFetch.post(\n            '/signIn',\n            { email, password },\n            { auth: false }\n        );\n        if (response.ok) {\n            const { token } = await response.json();\n            UserService.auth.writeToken(token);\n            return this.loadUser();\n        } else {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    loadUser = async () => {\n        const response = await this.fetch.get('/me');\n        if (response.ok) {\n            const {\n                first_name: firstName,\n                last_name: lastName,\n                ...rest\n            } = await response.json();\n            return { firstName, lastName, ...rest };\n        } else {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    signOut = () => UserService.auth.resetToken();\n\n    changeUserRole = async role => {\n        const response = await this.fetch.put('/changeRole', { role });\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    changePassword = async (oldPassword, newPassword) => {\n        const response = await this.authFetch.post('/changePassword', {\n            oldPassword,\n            newPassword,\n        });\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    handleInvalidResponse = async response => {\n        const payload = await response.json();\n        if (payload && payload.error) {\n            throw new Error(payload.error);\n        } else {\n            throw new Error('Invalid response!');\n        }\n    };\n}\n","export default class RestaurantService {\n    createRestaurant = restaurant =>\n        new Promise((resolve, reject) => {\n            try {\n                const data = JSON.parse(\n                    localStorage.getItem('food-hub-client')\n                );\n                const { restaurants } = data;\n                localStorage.setItem(\n                    'food-hub-client',\n                    JSON.stringify({\n                        ...data,\n                        restaurants: { ...restaurants, restaurant },\n                    })\n                );\n                setTimeout(() => resolve(restaurant), 500);\n            } catch (error) {\n                setTimeout(() => reject(error), 500);\n            }\n        });\n\n    getRestaurants = () =>\n        new Promise((resolve, reject) => {\n            try {\n                const restaurants = [\n                    {\n                        id: 1,\n                        image:\n                            'https://delo.ua/files/news/images/3535/14/picture2_mcdonalds-otkryla_353514_p0.jpg',\n                        name: 'McDonalds',\n                        description: 'Я це люблю',\n                        address: 'address',\n                    },\n                    {\n                        id: 2,\n                        image:\n                            'https://www.incimages.com/uploaded_files/image/970x450/getty_609504538_2000132920009280129_400506.jpg',\n                        name: 'KFC',\n                        description: 'Лучшие крылышки',\n                        address: 'address',\n                    },\n                    {\n                        id: 3,\n                        image:\n                            'http://franch.ua/wp-content/uploads/2019/07/franshiza-sushi-wok-ua.jpg',\n                        name: 'SushiWok',\n                        description: 'Роллы по доступной цене',\n                        address: 'address',\n                    },\n                    {\n                        id: 4,\n                        image:\n                            'https://media-cdn.tripadvisor.com/media/photo-s/04/a3/84/85/melrose.jpg',\n                        name: 'Melrose',\n                        description: 'Атмосфера дикого запада',\n                        address: 'address',\n                    },\n                    {\n                        id: 5,\n                        image:\n                            'https://media-cdn.tripadvisor.com/media/photo-s/11/3a/01/c7/caption.jpg',\n                        name: 'Пузата Хата',\n                        description: 'ТОП за свои деньги',\n                        address: 'address',\n                    },\n                ];\n                setTimeout(() => resolve(restaurants), 500);\n            } catch (error) {\n                setTimeout(() => reject(error), 500);\n            }\n        });\n\n    getLocations = () =>\n        new Promise((resolve, reject) => {\n            try {\n                setTimeout(\n                    () =>\n                        resolve([\n                            'КПИ',\n                            'м. Вокзальная',\n                            'м. Университет',\n                            'м. Театральная',\n                            'НАУ',\n                            'Шулявка',\n                        ]),\n                    500\n                );\n            } catch (error) {\n                setTimeout(() => reject(error), 500);\n            }\n        });\n}\n","export default class DishService {\n    getDishes = restaurantId =>\n        new Promise((resolve, reject) => {\n            try {\n                setTimeout(() =>\n                    resolve([\n                        {\n                            id: 0,\n                            title: 'Биг Мак',\n                            description: 'Биг Мак это большой бургер Мак',\n                            price: 55,\n                            image: 'https://nashagazeta.ch/sites/default/files/styles/article/public/bur-bigmac-big_0_0.jpg?itok=ulBsdGfr',\n                        },\n                        {\n                            id: 1,\n                            title: 'Чизбургер',\n                            description: 'Чизбургер это бургер с СЫРОМ',\n                            price: 35,\n                            image: 'https://irecommend.ru/sites/default/files/product-images/10297/AicNGqZUXD6gQsn3iYF1Q.jpg',\n                        },\n                        {\n                            id: 2,\n                            title: 'Биг Тейсти',\n                            description: 'Биг Тейсти это Большой и Вкусный бургер',\n                            price: 65,\n                            image: 'http://m-delivery.com/wa-data/public/shop/products/03/00/3/images/2/2.750.png',\n                        },\n                        {\n                            id: 3,\n                            title: 'Картошка Фри это жаренная картошка',\n                            description: 'Картошка Фри это жаренная картошка',\n                            price: 25,\n                            image: 'https://static.1000.menu/img/content/11993/kartofel-fri-v-multivarke_1418731085_2_max.jpg',\n                        },\n                    ])\n                );\n            } catch (error) {\n                setTimeout(() => reject(error), 500);\n            }\n        });\n}\n","import FetchFactory from '../fetch';\n\nexport default class PlaceService {\n    fetch = FetchFactory(`${process.env.REACT_APP_PLACE_API_BASE_URL}/place`);\n\n    _createFormData = data => {\n        const formData = new FormData();\n        Object.entries(data).forEach(([key, value]) => {\n            formData.append(key, value);\n        });\n        return formData;\n    };\n\n    addPlace = async data => {\n        const formData = this._createFormData(data);\n        const response = await this.fetch.postForm('/add', formData);\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    fetchPlaces = async () => {\n        const response = await this.fetch.get('/list');\n        if (response.ok) {\n            return response.json();\n        } else {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    deletePlace = async id => {\n        const response = await this.fetch.delete(`/delete?id=${id}`);\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    addProduct = async data => {\n        const formData = this._createFormData(data);\n        const response = await this.fetch.postForm('/product/add', formData);\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    deleteProduct = async id => {\n        const response = await this.fetch.delete(`/product/delete?id=${id}`);\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    };\n\n    getProducts = async () => {\n        const response = await this.fetch.get('/product/list');\n        const products = await response.json();\n        return products;\n    };\n\n    handleInvalidResponse = async response => {\n        const payload = await response.json();\n        if (payload && payload.error) {\n            throw new Error(payload.error);\n        } else {\n            throw new Error('Invalid response!');\n        }\n    };\n}\n","import FetchFactory from '../fetch';\n\nexport default class OrderService {\n    fetch = FetchFactory(`${process.env.REACT_APP_ORDER_API_BASE_URL}/order`);\n\n    sendOrder = async data => {\n        const response = await this.fetch.post('/add', data);\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n    }\n\n    getOrdersByCustomer = async () => {\n        const response = await this.fetch.get('/list/customer');\n        if (!response.ok) {\n            return this.handleInvalidResponse(response);\n        }\n        const data = await response.json();\n        return data;\n    }\n\n    handleInvalidResponse = async response => {\n        const payload = await response.json();\n        if (payload && payload.error) {\n            throw new Error(payload.error);\n        } else {\n            throw new Error('Invalid response!');\n        }\n    };\n}\n","import { createActions } from 'redux-actions';\n\nexport const { signInStart, signInSuccess, signInFailure } = createActions({\n    SIGN_IN_START: () => ({}),\n    SIGN_IN_SUCCESS: user => ({ user }),\n    SIGN_IN_FAILURE: error => ({ error }),\n});\n\nexport const { signUpStart, signUpSuccess, signUpFailure } = createActions({\n    SIGN_UP_START: () => ({}),\n    SIGN_UP_SUCCESS: user => ({ user }),\n    SIGN_UP_FAILURE: error => ({ error }),\n});\n\nexport const { signOutSuccess } = createActions({\n    SIGN_OUT_SUCCESS: () => ({}),\n});\n\nexport const {\n    changeUserRoleStart,\n    changeUserRoleSuccess,\n    changeUserRoleFailure,\n} = createActions({\n    CHANGE_USER_ROLE_START: () => ({}),\n    CHANGE_USER_ROLE_SUCCESS: role => ({ role }),\n    CHANGE_USER_ROLE_FAILURE: error => ({ error }),\n});\n\nexport const {\n    changePasswordStart,\n    changePasswordSuccess,\n    changePasswordFailure,\n} = createActions({\n    CHANGE_PASSWORD_START: () => ({}),\n    CHANGE_PASSWORD_SUCCESS: () => ({}),\n    CHANGE_PASSWORD_FAILURE: error => ({ error }),\n});\n","import { createActions } from 'redux-actions';\n\nexport const { getLocationsStart, getLocationsSuccess, getLocationsFail } = createActions({\n    GET_LOCATIONS_START: () => ({}),\n    GET_LOCATIONS_SUCCESS: locations => ({ locations }),\n    GET_LOCATIONS_FAIL: error => ({ error }),\n});\n\nexport const { createRestaurantStart, createRestaurantSuccess, createRestaurantFail } = createActions({\n    CREATE_RESTAURANT_START: () => ({}),\n    CREATE_RESTAURANT_SUCCESS: restaurant => ({ restaurant }),\n    CREATE_RESTAURANT_FAIL: error => ({ error }),\n});\n\nexport const { deleteRestaurantStart, deleteRestaurantSuccess, deleteRestaurantFail } = createActions({\n    DELETE_RESTAURANT_START: id => ({ id }),\n    DELETE_RESTAURANT_SUCCESS: () => ({}),\n    DELETE_RESTAURANT_FAIL: error => ({ error }),\n})\n\nexport const { updateRestaurantStart, updateRestaurantSuccess, updateRestaurantFail } = createActions({\n    UPDATE_RESTAURANT_START: (id, data) => ({ id, data }),\n    UPDATE_RESTAURANT_SUCCESS: data => ({ data }),\n    UPDATE_RESTAURANT_FAIL: error => ({ error }),\n})\n\nexport const { getRestaurantStart, getRestaurantSuccess, getRestaurantFail } = createActions({\n    GET_RESTAURANT_START: id => ({ id }),\n    GET_RESTAURANT_SUCCESS: restaurant => ({ restaurant }),\n    GET_RESTAURANT_FAIL: error => ({ error }),\n})\n\nexport const { getRestaurantsStart, getRestaurantsSuccess, getRestaurantsFail } = createActions({\n    GET_RESTAURANTS_START: () => ({}),\n    GET_RESTAURANTS_SUCCESS: restaurants => ({ restaurants }),\n    GET_RESTAURANTS_FAIL: error => ({ error }),\n})\n","import { createActions } from 'redux-actions';\n\nexport const {\n    getDishesStart,\n    getDishesSuccess,\n    getDishesFail,\n    pickDish,\n    removeDish,\n    addProductStart,\n    addProductFinish,\n    deleteProductStart,\n    deleteProductFinish,\n} = createActions({\n    GET_DISHES_START: () => ({}),\n    GET_DISHES_SUCCESS: dishes => ({ dishes }),\n    GET_DISHES_FAIL: error => ({ error }),\n\n    PICK_DISH: (dishId, count) => ({ dishId, count }),\n    REMOVE_DISH: (dishId, count) => ({ dishId, count }),\n\n    ADD_PRODUCT_START: () => ({}),\n    ADD_PRODUCT_FINISH: () => ({}),\n\n    DELETE_PRODUCT_START: () => ({}),\n    DELETE_PRODUCT_FINISH: () => ({}),\n});\n","import { createActions } from 'redux-actions';\n\nexport const { addNotification, removeNotification } = createActions({\n    ADD_NOTIFICATION: notification => ({ notification }),\n    REMOVE_NOTIFICATION: id => ({ id }),\n});\n","import { createActions } from 'redux-actions';\n\nexport const { sendOrderStart, sendOrderFinish, getOrdersByCustomerStart, getOrdersByCustomerSuccess, getOrdersByCustomerFail} = createActions({\n    SEND_ORDER_START: () => ({}),\n    SEND_ORDER_FINISH: () => ({}),\n\n    GET_ORDERS_BY_CUSTOMER_START: () => ({}),\n    GET_ORDERS_BY_CUSTOMER_SUCCESS: (orders) => ({orders}),\n    GET_ORDERS_BY_CUSTOMER_FAIL: (error) => ({error}),\n});\n","export const ResourseStatus = {\n    READY: 'READY',\n    LOADING: 'LOADING',\n    ERROR: 'ERROR',\n};\n","import { fromJS } from 'immutable';\nimport { handleActions, combineActions } from 'redux-actions';\n\nimport {\n    signInSuccess,\n    signUpSuccess,\n    signInFailure,\n    signUpFailure,\n    signInStart,\n    signUpStart,\n    changeUserRoleStart,\n    changeUserRoleFailure,\n    changePasswordStart,\n    changePasswordFailure,\n    changePasswordSuccess,\n} from '../actions';\nimport { ResourseStatus } from '../constants';\n\nconst initialState = fromJS({\n    status: ResourseStatus.LOADING,\n    data: fromJS({\n        firstName: undefined,\n        lastName: undefined,\n        email: undefined,\n        role: undefined,\n    }),\n    error: undefined,\n});\n\nexport const userReducer = handleActions(\n    {\n        [combineActions(signInSuccess, signUpSuccess)]: (\n            state,\n            { payload: { user } }\n        ) =>\n            state\n                .updateIn(['status'], () => ResourseStatus.READY)\n                .updateIn(['data'], data => ({ ...data, ...user }))\n                .updateIn(['error'], () => undefined),\n\n        CHANGE_USER_ROLE_SUCCESS: (state, { payload: { role } }) =>\n            state\n                .updateIn(['status'], () => ResourseStatus.READY)\n                .updateIn(['data', 'role'], () => role)\n                .updateIn(['error'], () => undefined),\n\n        [combineActions(changePasswordSuccess, changePasswordFailure)]: state =>\n            state.updateIn(['status'], () => ResourseStatus.READY),\n\n        [combineActions(signInFailure, signUpFailure, changeUserRoleFailure)]: (\n            state,\n            { payload: { error } }\n        ) =>\n            state\n                .updateIn(['status'], () => ResourseStatus.ERROR)\n                .updateIn(['error'], () => error),\n\n        [combineActions(\n            signInStart,\n            signUpStart,\n            changeUserRoleStart,\n            changePasswordStart\n        )]: state => state.updateIn(['status'], () => ResourseStatus.LOADING),\n\n        SIGN_OUT_SUCCESS: () =>\n            initialState.updateIn(['status'], () => ResourseStatus.READY),\n    },\n    initialState\n);\n","import { fromJS } from 'immutable';\nimport { handleActions, combineActions } from 'redux-actions';\n\nimport {\n    getLocationsSuccess,\n\n    getRestaurantsStart,\n    getRestaurantsSuccess,\n    getRestaurantsFail,\n} from '../actions';\n\nimport { ResourseStatus } from '../constants';\n\nconst initialState = fromJS({\n    status: ResourseStatus.LOADING,\n    store: [],\n    locations: [],\n});\n\nexport const restaurantReducer = handleActions({\n        [combineActions(getRestaurantsStart)]: state => state\n            .set('status', ResourseStatus.LOADING),\n\n        [combineActions(getRestaurantsFail)]: state => state\n            .set('status', ResourseStatus.ERROR),\n\n        [getRestaurantsSuccess]: (state, { payload: { restaurants } }) => state\n            .set('status', ResourseStatus.READY)\n            .set('store', restaurants),\n        [getLocationsSuccess]: (state, { payload: { locations } }) => state\n            .set('status', ResourseStatus.READY)\n            .set('locations', locations),\n    },\n    initialState\n);\n\n","import { fromJS } from 'immutable';\nimport { handleActions, combineActions } from 'redux-actions';\n\nimport {\n    getDishesStart,\n    getDishesSuccess,\n    getDishesFail,\n    pickDish,\n    removeDish,\n    addProductStart,\n    deleteProductStart,\n    addProductFinish,\n    deleteProductFinish,\n} from '../actions';\n\nimport { ResourseStatus } from '../constants';\n\nconst initialState = fromJS({\n    status: ResourseStatus.LOADING,\n    store: [],\n    selected: {},\n});\n\nexport const dishReducer = handleActions(\n    {\n        [getDishesStart]: state => state.set('status', ResourseStatus.LOADING),\n        [getDishesFail]: state => state.set('status', ResourseStatus.ERROR),\n        [getDishesSuccess]: (state, { payload: { dishes } }) =>\n            state.set('store', dishes).set('status', ResourseStatus.READY),\n\n        [pickDish]: (state, { payload: { dishId, count } }) =>\n            state\n                .setIn(['selected', dishId, 'status'], true)\n                .setIn(['selected', dishId, 'count'], count),\n        [removeDish]: (state, { payload: { dishId, count } }) =>\n            state\n                .setIn(\n                    ['selected', dishId, 'status'],\n                    state.getIn(['selected', dishId, 'count']) - count > 0\n                )\n                .updateIn(['selected', dishId, 'count'], x => x - count),\n\n        [combineActions(addProductStart, deleteProductStart)]: state =>\n            state.set('status', ResourseStatus.LOADING),\n\n        [combineActions(addProductFinish, deleteProductFinish)]: state =>\n            state.set('status', ResourseStatus.READY),\n    },\n    initialState\n);\n","import { List } from 'immutable';\nimport { handleActions } from 'redux-actions';\n\nconst initialState = new List();\n\nexport const notificationsReducer = handleActions(\n    {\n        ADD_NOTIFICATION: (state, { payload: { notification } }) =>\n            state.push(notification),\n\n        REMOVE_NOTIFICATION: (state, { payload: { id: deleteId } }) =>\n            state.filter(({ id }) => id !== deleteId),\n    },\n    initialState\n);\n","import { createActions } from 'redux-actions';\n\nexport const { addPlaceStart, addPlaceFinish } = createActions({\n    ADD_PLACE_START: () => ({}),\n    ADD_PLACE_FINISH: () => ({}),\n});\n\nexport const { deletePlaceStart, deletePlaceFinish } = createActions({\n    DELETE_PLACE_START: () => ({}),\n    DELETE_PLACE_FINISH: () => ({}),\n});\n\nexport const {\n    fetchPlacesStart,\n    fetchPlacesSuccess,\n    fetchPlacesFailure,\n} = createActions({\n    FETCH_PLACES_START: () => ({}),\n    FETCH_PLACES_SUCCESS: places => ({ places }),\n    FETCH_PLACES_FAILURE: error => ({ error }),\n});\n","import { fromJS, List } from 'immutable';\nimport { handleActions, combineActions } from 'redux-actions';\nimport { ResourseStatus } from '../constants';\nimport {\n    addPlaceStart,\n    deletePlaceStart,\n    addPlaceFinish,\n    deletePlaceFinish,\n} from '../actions/place';\n\nconst initialState = fromJS({\n    status: ResourseStatus.READY,\n    list: [],\n    error: undefined,\n});\n\nexport const placeReducer = handleActions(\n    {\n        [combineActions(addPlaceStart, deletePlaceStart)]: state =>\n            state.updateIn(['status'], () => ResourseStatus.LOADING),\n\n        [combineActions(addPlaceFinish, deletePlaceFinish)]: state =>\n            state.updateIn(['status'], () => ResourseStatus.READY),\n\n        FETCH_PLACES_START: state =>\n            state.updateIn(['status'], () => ResourseStatus.LOADING),\n\n        FETCH_PLACES_SUCCESS: (state, { payload: { places } }) =>\n            state\n                .updateIn(['list'], () => new List(places))\n                .updateIn(['status'], () => ResourseStatus.READY)\n                .updateIn(['error'], () => undefined),\n\n        FETCH_PLACES_FAILURE: (state, { payload: { error } }) =>\n            state\n                .updateIn(['error'], () => error)\n                .updateIn(['status'], () => ResourseStatus.ERROR),\n    },\n    initialState\n);\n","import { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\n\nimport { ResourseStatus } from '../constants';\n\nimport {\n    sendOrderStart,\n    sendOrderFinish,\n\n    getOrdersByCustomerStart,\n    getOrdersByCustomerSuccess,\n    getOrdersByCustomerFail,\n} from '../actions';\n\nconst initialState = fromJS({\n    status: ResourseStatus.READY,\n    ordersByCustomer: {\n        status: ResourseStatus.READY,\n        data: [],\n    },\n});\n\nexport const orderReducer = handleActions({\n    [sendOrderStart]: state => state\n        .set('status', ResourseStatus.LOADING),\n    [sendOrderFinish]: state => state\n        .set('status', ResourseStatus.READY),\n\n    [getOrdersByCustomerStart]: state => state\n        .setIn(['ordersByCustomer', 'status'], ResourseStatus.LOADING),\n    [getOrdersByCustomerSuccess]: (state, { payload : { orders } }) => state\n        .setIn(['ordersByCustomer', 'status'], ResourseStatus.READY)\n        .setIn(['ordersByCustomer', 'data'], orders),\n    [getOrdersByCustomerFail]: state => state\n        .setIn(['ordersByCustomer', 'status'], ResourseStatus.ERROR),\n\n}, initialState)\n\n\n\n","import { combineReducers } from 'redux';\n\nimport { userReducer } from './user';\nimport { restaurantReducer } from './restaurant';\nimport { dishReducer } from './dish';\nimport { notificationsReducer } from './notifications';\nimport { placeReducer } from './place';\nimport { orderReducer } from './order';\n\nexport const rootReducer = combineReducers({\n    user: userReducer,\n    restaurant: restaurantReducer,\n    dish: dishReducer,\n    notifications: notificationsReducer,\n    place: placeReducer,\n    order: orderReducer,\n});\n","import uuid from 'uuid';\nimport { addNotification, removeNotification } from '../actions';\n\nexport const showNotification = (type, message) => async dispatch => {\n    const notification = { id: uuid(), type, message };\n    dispatch(addNotification(notification));\n    setTimeout(() => {\n        dispatch(removeNotification(notification.id));\n    }, 6000);\n};\n","export const ErrorType = {\n    SIGN_UP_INVALID_EMAIL: 'SIGN_UP_INVALID_EMAIL',\n    SIGN_UP_DUPLICATED_EMAIL: 'SIGN_UP_DUPLICATED_EMAIL',\n    SIGN_IN_INVALID_CREDENTIALS: 'SIGN_IN_INCORRECT_CREDENTIALS',\n    SIGN_IN_UNKNOWN_USER: 'SIGN_IN_UNKNOWN_USER',\n    CHANGE_USER_ROLE_INVALID_ROLE: 'CHANGE_USER_ROLE_INVALID_ROLE',\n    CHANGE_USRE_ROLE_USER_NOT_FOUND: 'CHANGE_USRE_ROLE_USER_NOT_FOUND',\n    INVALID_DATA_PROVIDED: 'INVALID_DATA_PROVIDED',\n    SESSION_EXPIRED: 'SESSION_EXPIRED',\n    UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n};\n\nexport const getErrorTypeByError = error => {\n    if (!error || typeof error.message !== 'string')\n        return ErrorType.UNKNOWN_ERROR;\n    switch (error.message.trim()) {\n        case 'Invalid email!':\n            return ErrorType.SIGN_UP_INVALID_EMAIL;\n        case 'User with current email already exists!':\n            return ErrorType.SIGN_UP_DUPLICATED_EMAIL;\n        case 'Invalid password!':\n        case 'Invalid login!':\n            return ErrorType.SIGN_IN_INVALID_CREDENTIALS;\n        case 'Invalid token!':\n        case 'Missing token!':\n            return ErrorType.SESSION_EXPIRED;\n        case 'Forbidden. Invalid token!':\n        case 'Forbidden. Missing token!':\n            return ErrorType.INVALID_DATA_PROVIDED;\n        case 'User does not exist!':\n            return ErrorType.SIGN_IN_UNKNOWN_USER;\n        case 'Invalid user role!':\n            return ErrorType.CHANGE_USER_ROLE_INVALID_ROLE;\n        case 'User for update not found!':\n            return ErrorType.CHANGE_USRE_ROLE_USER_NOT_FOUND;\n        default:\n            return ErrorType.UNKNOWN_ERROR;\n    }\n};\n\nexport const getErrorMessageByType = errorType => {\n    switch (errorType) {\n        case ErrorType.SIGN_IN_INVALID_CREDENTIALS:\n            return 'Incorrect credentials. Please, try again.';\n        case ErrorType.SESSION_EXPIRED:\n            return 'Session expired. Please try to sign in again.';\n        case ErrorType.SIGN_IN_UNKNOWN_USER:\n            return 'User with provided email does not exist. Please, try to sign in using another email.';\n        case ErrorType.SIGN_UP_INVALID_EMAIL:\n            return 'Format of provided email is invalid. Please, enter valid email.';\n        case ErrorType.SIGN_UP_DUPLICATED_EMAIL:\n            return 'User with provided email already exists. Please, try to sign in or use another email.';\n        default:\n            return 'Error. Please, try again.';\n    }\n};\n","export const NotificationTypes = {\n    SUCCESS: 'success',\n    ERROR: 'error',\n    INFO: 'info',\n};\n","import { showNotification } from './notifications';\nimport {\n    signInStart,\n    signInFailure,\n    signInSuccess,\n    signUpStart,\n    signUpFailure,\n    signUpSuccess,\n    signOutSuccess,\n    changeUserRoleStart,\n    changeUserRoleSuccess,\n    changeUserRoleFailure,\n    changePasswordStart,\n    changePasswordFailure,\n    changePasswordSuccess,\n} from '../actions';\nimport {\n    getErrorTypeByError,\n    NotificationTypes,\n    getErrorMessageByType,\n} from '../../utils';\n\nexport const signIn = ({ login, password }, redirect) => async (\n    dispatch,\n    _getState,\n    { userAPI }\n) => {\n    dispatch(signInStart());\n    try {\n        const user = await userAPI.signIn(login, password);\n        dispatch(signInSuccess(user));\n        redirect && redirect();\n    } catch (error) {\n        dispatch(signInFailure({ type: getErrorTypeByError(error) }));\n    }\n};\n\nexport const signUp = (userData, redirect) => async (\n    dispatch,\n    _getState,\n    { userAPI }\n) => {\n    dispatch(signUpStart());\n    try {\n        const user = await userAPI.signUp(userData);\n        dispatch(signUpSuccess(user));\n        redirect && redirect();\n    } catch (error) {\n        dispatch(signUpFailure({ type: getErrorTypeByError(error) }));\n    }\n};\n\nexport const signOut = () => async (dispatch, _getState, { userAPI }) => {\n    userAPI.signOut();\n    dispatch(signOutSuccess());\n};\n\nexport const changeUserRole = (role, redirect) => async (\n    dispatch,\n    _getState,\n    { userAPI }\n) => {\n    dispatch(changeUserRoleStart());\n    try {\n        await userAPI.changeUserRole(role);\n        dispatch(changeUserRoleSuccess(role));\n        redirect && redirect();\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                `User role successfuly changed to ${role}`\n            )\n        );\n    } catch (error) {\n        dispatch(changeUserRoleFailure({ type: getErrorTypeByError(error) }));\n    }\n};\n\nexport const changePassword = (oldPassword, newPassword) => async (\n    dispatch,\n    _getState,\n    { userAPI }\n) => {\n    dispatch(changePasswordStart());\n    try {\n        await userAPI.changePassword(oldPassword, newPassword);\n        dispatch(changePasswordSuccess());\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Password successfuly changed!'\n            )\n        );\n    } catch (error) {\n        dispatch(changePasswordFailure());\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n};\n","import {\n    createRestaurantStart,\n    createRestaurantSuccess,\n    createRestaurantFail,\n\n    getRestaurantsStart,\n    getRestaurantsSuccess,\n    getRestaurantsFail,\n\n    getLocationsStart,\n    getLocationsSuccess,\n    getLocationsFail,\n\n} from '../actions';\n\nexport const createRestaurant = ( restaurant ) => async (dispatch, _getState, { restaurantAPI }) => {\n    dispatch(createRestaurantStart());\n    try {\n        const response = await restaurantAPI.createRestaurant(restaurant);\n        dispatch(createRestaurantSuccess(response));\n    } catch (error) {\n        dispatch(createRestaurantFail(error));\n    }\n}\n\nexport const getRestaurants = () => async (dispatch, _getState, { restaurantAPI }) => {\n    dispatch(getRestaurantsStart());\n    try {\n        const restaurants = await restaurantAPI.getRestaurants();\n        dispatch(getRestaurantsSuccess(restaurants));\n    } catch (error) {\n        dispatch(getRestaurantsFail(error))\n    }\n}\n\nexport const getLocations = () => async (dispatch, _getState, { restaurantAPI }) => {\n    dispatch(getLocationsStart());\n    try {\n        const locations = await restaurantAPI.getLocations();\n        dispatch(getLocationsSuccess(locations));\n    } catch (error) {\n        dispatch(getLocationsFail(error));\n    }\n}\n","import {\n    getDishesStart,\n    getDishesSuccess,\n    getDishesFail,\n    addProductStart,\n    addProductFinish,\n    deleteProductStart,\n    deleteProductFinish,\n} from '../actions';\n\nimport { showNotification } from './notifications';\nimport {\n    NotificationTypes,\n    getErrorTypeByError,\n    getErrorMessageByType,\n} from '../../utils';\n\nexport const getProducts = () => async (dispatch, _getState, { placeAPI }) => {\n    dispatch(getDishesStart());\n    try {\n        const rawPlaces = await placeAPI.getProducts();\n        const places = rawPlaces.map(place => ({\n            ...place,\n            title: place.product_name,\n        }));\n        dispatch(getDishesSuccess(places));\n    } catch (error) {\n        dispatch(getDishesFail(error));\n    }\n};\n\nexport const addProduct = (data, redirect) => async (\n    dispatch,\n    _getState,\n    { placeAPI }\n) => {\n    dispatch(addProductStart());\n    try {\n        await placeAPI.addProduct(data);\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Product was successufuly added!'\n            )\n        );\n        redirect && redirect();\n    } catch (error) {\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n    dispatch(addProductFinish());\n};\n\nexport const deleteProduct = id => async (\n    dispatch,\n    _getState,\n    { placeAPI }\n) => {\n    dispatch(deleteProductStart());\n    try {\n        await placeAPI.deleteProduct(id);\n        dispatch(getProducts());\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Product was successufuly deleted!'\n            )\n        );\n    } catch (error) {\n        dispatch(deleteProductFinish());\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n};\n","import {\n    addPlaceStart,\n    addPlaceFinish,\n    fetchPlacesStart,\n    fetchPlacesFailure,\n    fetchPlacesSuccess,\n    deletePlaceStart,\n    deletePlaceFinish,\n} from '../actions/place';\nimport { showNotification } from './notifications';\nimport {\n    NotificationTypes,\n    getErrorTypeByError,\n    getErrorMessageByType,\n} from '../../utils';\n\nexport const addPlace = (data, redirect) => async (\n    dispatch,\n    _getState,\n    { placeAPI }\n) => {\n    dispatch(addPlaceStart());\n    try {\n        await placeAPI.addPlace(data);\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Place was successufuly added!'\n            )\n        );\n        redirect && redirect();\n    } catch (error) {\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n    dispatch(addPlaceFinish());\n};\n\nexport const fetchPlaces = () => async (dispatch, _getState, { placeAPI }) => {\n    dispatch(fetchPlacesStart());\n    try {\n        const places = await placeAPI.fetchPlaces();\n        dispatch(fetchPlacesSuccess(places));\n    } catch (error) {\n        dispatch(fetchPlacesFailure({ type: getErrorTypeByError(error) }));\n    }\n};\n\nexport const deletePlace = id => async (dispatch, _getState, { placeAPI }) => {\n    dispatch(deletePlaceStart());\n    try {\n        await placeAPI.deletePlace(id);\n        dispatch(fetchPlaces());\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Place was successufuly deleted!'\n            )\n        );\n    } catch (error) {\n        dispatch(deletePlaceFinish());\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n};\n","import {\n    sendOrderStart,\n    sendOrderFinish,\n\n    getOrdersByCustomerStart,\n    getOrdersByCustomerSuccess,\n    getOrdersByCustomerFail,\n} from '../actions';\n\nimport { showNotification } from './notifications';\nimport {\n    NotificationTypes,\n    getErrorTypeByError,\n    getErrorMessageByType,\n} from '../../utils';\n\nexport const sendOrder = (data, redirect) => async (dispatch, _getState, { orderAPI }) => {\n    dispatch(sendOrderStart());\n    try {\n        await orderAPI.sendOrder(data);\n        dispatch(\n            showNotification(\n                NotificationTypes.SUCCESS,\n                'Order was successufuly sent'\n            )\n        );\n        redirect && redirect();\n    } catch (error) {\n        dispatch(\n            showNotification(\n                NotificationTypes.ERROR,\n                getErrorMessageByType(getErrorTypeByError(error))\n            )\n        );\n    }\n    dispatch(sendOrderFinish());\n}\n\nexport const getOrdersByCustomer = () => async (dispatch, _getState, { orderAPI }) => {\n    dispatch(getOrdersByCustomerStart());\n    try {\n        const orders = await orderAPI.getOrdersByCustomer();\n        dispatch(getOrdersByCustomerSuccess(orders));\n    } catch (error) {\n        dispatch(getOrdersByCustomerFail(error));\n    }\n}\n\n","import { createSelector } from 'reselect';\n\nimport { ResourseStatus } from '../constants';\n\nimport { getErrorMessageByType } from '../../utils';\n\nexport const selectUserState = state => state.user;\n\nexport const selectUserData = createSelector(\n    selectUserState,\n    user => user.toJS().data\n);\n\nexport const selectUserRole = createSelector(selectUserState, user =>\n    user.getIn(['data', 'role'])\n);\n\nexport const selectUserId = createSelector(selectUserState, user =>\n    user.getIn(['data', 'id'])\n);\n\nexport const selectIsUserProducer = createSelector(\n    selectUserRole,\n    role => role === 'producer'\n);\n\nexport const selectIsAuthenticated = createSelector(\n    selectUserState,\n    user =>\n        user.get('status') === ResourseStatus.READY &&\n        user.getIn(['data', 'email'])\n);\n\nexport const selectIsUserDataLoading = createSelector(\n    selectUserState,\n    user => user.get('status') === ResourseStatus.LOADING\n);\n\nexport const selectIsUserErrorExist = createSelector(selectUserState, user =>\n    Boolean(user.getIn(['error', 'type']))\n);\n\nexport const selectUserDataErrorMessage = createSelector(\n    selectUserState,\n    selectIsUserErrorExist,\n    (user, isError) => {\n        if (!isError) return;\n        const errorType = user.getIn(['error', 'type']);\n        return getErrorMessageByType(errorType);\n    }\n);\n","import { createSelector } from 'reselect';\nimport { ResourseStatus } from '../constants';\n\nexport const selectRestaurantState = state => state.restaurant;\n\nexport const selectAllRestaurants = createSelector(selectRestaurantState, restaurantStore =>\n    restaurantStore.get('store')\n);\n\nexport const selectAllLocations = createSelector(selectRestaurantState, restaurantStore =>\n    restaurantStore.get('locations')\n);\n\nexport const selectIsRestaurantsLoading = createSelector(selectRestaurantState, restaurantStore =>\n    restaurantStore.get('status') === ResourseStatus.LOADING\n);\n","import { createSelector } from 'reselect';\nimport { ResourseStatus } from '../constants';\nimport { selectUserId } from './user';\n\nexport const selectPlaceState = state => state.place;\n\nexport const selectPlaceStatus = createSelector(selectPlaceState, placeState =>\n    placeState.getIn(['status'])\n);\n\nexport const selectIsPlacesLoading = createSelector(\n    selectPlaceStatus,\n    status => status === ResourseStatus.LOADING\n);\n\nexport const selectPlaces = createSelector(selectPlaceState, placeState =>\n    placeState.getIn(['list'])\n);\n\nexport const selectProducerPlaces = createSelector(\n    selectPlaces,\n    selectUserId,\n    (places, userId) =>\n        places ? places.filter(place => place['owner_id'] === userId) : []\n);\n","import { createSelector } from 'reselect';\nimport { ResourseStatus } from '../constants';\nimport { List, Map } from 'immutable';\nimport { selectProducerPlaces } from './place';\n\nexport const selectDishesState = state => state.dish;\n\nconst getAllDishes = store => store.get('store');\n\nexport const selectAllDishes = createSelector(selectDishesState, getAllDishes);\n\nexport const selectIsDishesLoading = createSelector(\n    selectDishesState,\n    dishesStore => dishesStore.get('status') === ResourseStatus.LOADING\n);\n\nexport const getAllSelectedInfo = store =>\n    store.get('selected').filter(value => value.get('status'));\n\nexport const selectPickedDishes = createSelector(\n    selectDishesState,\n    dishesStore => {\n        const dishes = getAllDishes(dishesStore);\n\n        let result = List();\n\n        getAllSelectedInfo(dishesStore).forEach((value, key) => {\n            const count = value.get('count');\n            const dish = dishes.find(dish => dish.id === Number(key));\n            result = result.push(Map({ ...dish, count }));\n        });\n\n        return result;\n    }\n);\n\nexport const selectDishesByPlace = createSelector(\n    selectProducerPlaces,\n    selectAllDishes,\n    (places, dishes) =>\n        places.map(place =>\n            Map({\n                place,\n                dishes: dishes.filter(dish => dish['place_id'] === place.id),\n            })\n        )\n);\n","export const selectNotifications = state => state.notifications;\n","import { createSelector } from 'reselect';\nimport { ResourseStatus } from '../constants';\n\nexport const selectOrderState = state => state.order;\n\nexport const selectIsCustomerOrdersLoading = createSelector(\n    selectOrderState,\n    orderStore => orderStore.getIn(['ordersByCustomer', 'status']) === ResourseStatus.LOADING\n);\n\nexport const selectCustomerOrders = createSelector(\n    selectOrderState,\n    orderStore => {\n        return orderStore.getIn(['ordersByCustomer', 'data'])\n    }\n)\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsAuthenticated } from '../../store';\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useSelector(selectIsAuthenticated);\n    return (\n        <Route\n            {...rest}\n            render={props => (\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{\n                        pathname: '/signIn',\n                        state: { from: props.location }\n                    }} />\n                )\n            )}\n        />\n    );\n}\n","export const routes = {\n    signIn: '/signIn',\n    signUp: '/signUp',\n    restaurants: '/restaurants',\n    dishes: '/:restaurant/dishes',\n    home: '/',\n    order: '/order',\n    orderHistory: '/orderHistory',\n    account: '/account',\n    businessAccount: '/businessAccount',\n    placeAdd: '/place/add',\n    productAdd: '/:place/product/add',\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsAuthenticated, selectIsUserProducer } from '../../store';\nimport { routes } from '../../routes';\n\nexport default function ProducerProtectedRoute({\n    component: Component,\n    ...rest\n}) {\n    const isAuthenticated = useSelector(selectIsAuthenticated);\n    const isProducer = useSelector(selectIsUserProducer);\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isProducer && isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: isAuthenticated\n                                ? routes.home\n                                : routes.signIn,\n                            state: { from: props.location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n    },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.root}>\n            <CircularProgress size={72} />\n        </Container>\n    );\n}\n","// Core\nimport React from 'react';\n// Instruments\nimport { Link, generatePath } from 'react-router-dom';\nimport { routes } from '../../routes';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, Typography, IconButton } from '@material-ui/core';\n// Icons\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontWeight: 'bold',\n    },\n    image: {\n        maxWidth: '100%',\n        height: 100,\n        display: 'flex',\n        alignSelf: 'center',\n    },\n    card: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1),\n        minWidth: 600,\n        color: theme.palette.text.secondary,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.default,\n    },\n    content: {\n        padding: theme.spacing(1),\n        position: 'relative',\n    },\n    distance: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(1),\n    },\n    delete: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}));\n\nexport default function Restaurant(props) {\n    const {\n        id,\n        name,\n        image,\n        description,\n        address,\n        onDelete,\n        asLink = true,\n    } = props;\n    const classes = useStyles();\n\n    const card = (\n        <Card className={classes.card}>\n            <Grid container direction={'row'}>\n                <Grid\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                    item\n                    xs={4}\n                >\n                    <img className={classes.image} alt={'alt'} src={image} />\n                </Grid>\n                <Grid className={classes.content} item xs={8}>\n                    <Typography\n                        className={classes.title}\n                        variant={'h5'}\n                        gutterBottom\n                    >\n                        {name}\n                    </Typography>\n                    <div className={classes.distance}>\n                        <LocationOnIcon fontSize={'inherit'} />\n                        <span style={{ marginLeft: '5px' }}>{address}</span>\n                    </div>\n                    <div className={classes.distance}>\n                        <FastfoodIcon fontSize={'inherit'} />\n                        <span style={{ marginLeft: '5px' }}>{description}</span>\n                    </div>\n                    {onDelete ? (\n                        <IconButton\n                            className={classes.delete}\n                            onClick={onDelete}\n                        >\n                            <DeleteIcon color=\"primary\" />\n                        </IconButton>\n                    ) : (\n                        <FastfoodIcon\n                            className={classes.delete}\n                            color=\"primary\"\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </Card>\n    );\n\n    return (\n        <Grid item xs={6}>\n            {asLink ? (\n                <Link to={generatePath(routes.dishes, { restaurant: id })}>\n                    {card}\n                </Link>\n            ) : (\n                card\n            )}\n        </Grid>\n    );\n}\n","// Core\nimport React from 'react';\n// Instruments\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n// Components\nimport Restaurant from '../../components/Restaurant';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: '1380px',\n        alignSelf: 'center',\n    },\n    card: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function RestaurantsList({ searchValue, restaurants }) {\n    const classes = useStyles();\n\n    if (!restaurants) return null;\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid container spacing={3}>\n                    {restaurants\n                        .filter(r =>\n                            r['place_name']\n                                .toLowerCase()\n                                .includes(searchValue.toLowerCase())\n                        )\n                        .map(restaurant => (\n                            <Restaurant\n                                {...restaurant}\n                                name={restaurant['place_name']}\n                                key={restaurant.id}\n                                image={`${process.env.REACT_APP_PLACE_API_BASE_URL}/place/image?id=${restaurant.id}`}\n                            />\n                        ))}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Grid, InputBase, IconButton, MenuItem, FormHelperText, FormControl, Select } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: 10,\n        padding: 10,\n        position: 'sticky',\n        top: 0,\n        background: theme.palette.grey[300],\n        zIndex: 100,\n        overflow: 'hidden',\n    },\n    content: { display: 'flex',\n        alignItems: 'center',\n    },\n    search: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    button: {\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: '100%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Search({ searchValue, setSearchValue, locations }) {\n    const classes = useStyles();\n    const [location, setLocation] = useState('');\n    const [rating, setRating] = useState('');\n\n    const handleLocation = ({ target: { value } }) => setLocation(value);\n    const handleRating = ({ target: { value } }) => setRating(value);\n\n    const handleSearchInput = ({ target: { value } }) => setSearchValue(value);\n\n    return (\n        <div className={classes.root}>\n            <Grid className={classes.content} container spacing={2}>\n                <Grid item xs={8}>\n                    <Paper component=\"form\" className={classes.search}>\n                        <InputBase\n                            className={classes.input}\n                            placeholder=\"Поиск ( напр. Макдональдс )\"\n                            inputProps={{ 'aria-label': 'Поиск ( напр. Макдональдс )' }}\n                            value={searchValue}\n                            onChange={handleSearchInput}\n                        />\n                        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                            <SearchIcon />\n                        </IconButton>\n                    </Paper>\n                </Grid>\n                <Grid item xs={2}>\n                    <FormControl className={classes.formControl}>\n                        <Select value={location} onChange={handleLocation} displayEmpty className={classes.selectEmpty}>\n                            <MenuItem value=\"\" disabled>\n                                Локация\n                            </MenuItem>\n                            {locations.map((location, index) => (\n                                <MenuItem key={index} value={index}>\n                                    {location}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Локация</FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={2}>\n                    <FormControl className={classes.formControl}>\n                        <Select value={rating} onChange={handleRating} displayEmpty className={classes.selectEmpty}>\n                            <MenuItem value=\"\" disabled>\n                                Рейтинг\n                            </MenuItem>\n                            <MenuItem value={1}>Одна звезда</MenuItem>\n                            <MenuItem value={2}>Две звезды</MenuItem>\n                            <MenuItem value={3}>Три звезды</MenuItem>\n                            <MenuItem value={4}>Четыре звезды</MenuItem>\n                            <MenuItem value={5}>Пять звезд</MenuItem>\n                        </Select>\n                        <FormHelperText>Рейтинг</FormHelperText>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react'\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nexport const OrderStepper = ({ activeStep }) => {\n    const steps = ['Выберите ресторан', 'Выберите понравившиеся блюда', 'Оформите заказ'];\n    return (\n        <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map(label => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from 'react';\n// Instruments\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    getLocations,\n    getRestaurants,\n    selectIsRestaurantsLoading,\n    selectAllLocations,\n    selectAllRestaurants,\n    fetchPlaces,\n    selectIsPlacesLoading,\n    selectPlaces,\n} from '../../store';\n// Components\nimport Loading from '../../components/Loading';\nimport RestaurantsList from '../../components/RestaurantsList';\nimport Search from '../../components/Search';\nimport { OrderStepper } from '../../components/OrderStepper';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n}));\n\nexport default function Restaurants() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const locations = useSelector(selectAllLocations);\n    const restaurants = useSelector(selectPlaces);\n    const isLoading = useSelector(selectIsPlacesLoading);\n\n    useEffect(() => {\n        dispatch(getLocations());\n        dispatch(fetchPlaces());\n    }, [dispatch]);\n\n    // hardcoded for presentation, will change soon\n    const [searchValue, setSearchValue] = useState('');\n\n    if (isLoading) return <Loading />;\n\n    return (\n        <div className={classes.root}>\n            <Search\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n                locations={locations}\n            />\n            <OrderStepper activeStep={0} />\n            <RestaurantsList\n                searchValue={searchValue}\n                restaurants={restaurants}\n            />\n        </div>\n    );\n}\n","import React, { useState, useCallback } from 'react';\nimport { Typography, Button, TextField } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { sendOrder } from '../../store';\nimport { selectUserData } from '../../store/selectors/user';\nimport { routes } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        alignSelf: 'center',\n        margin: theme.spacing(1),\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    title: {\n        margin: theme.spacing(1),\n    },\n    row: {\n        display: 'flex',\n        margin: theme.spacing(1),\n    },\n    field: {\n        flex: 1,\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function OrderForm({ orderInfo }) {\n    const classes = useStyles();\n\n    const handleDateChange = date => setTime(date);\n    const handleNameChange = ({ target: { value } }) => setName(value);\n    const handleEmailChange = ({ target: { value } }) => setEmail(value);\n    const handleCommentChange = ({ target: { value } }) => setComment(value);\n\n    const { firstName, lastName, email: mail } = useSelector(selectUserData);\n\n    const history = useHistory();\n    const redirect = useCallback(() => history.push(routes.home), [history]);\n\n    const [name, setName] = useState(firstName + ' ' + lastName);\n    const [email, setEmail] = useState(mail);\n    const [time, setTime] = useState(new Date());\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // normalize products\n\n        const { products: rawProducts, placeId } = orderInfo;\n\n        const products = {};\n        rawProducts.forEach(product => (products[product.id] = product.count));\n\n        const data = {\n            placeId,\n            readyDate: time\n                .toISOString()\n                .slice(0, 19)\n                .replace('T', ' '),\n            products,\n        };\n\n        dispatch(sendOrder(data, redirect));\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography\n                style={{ fontWeight: 'bold' }}\n                className={classes.title}\n                variant=\"h2\"\n            >\n                Информация о заказе\n            </Typography>\n            <Typography className={classes.title} variant=\"h5\">\n                Введите свои данные для завершения заказа\n            </Typography>\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <div className={classes.row}>\n                    <TextField\n                        className={classes.field}\n                        value={name}\n                        onChange={handleNameChange}\n                        id=\"name\"\n                        label=\"Имя\"\n                        variant=\"filled\"\n                    />\n                </div>\n\n                <div className={classes.row}>\n                    <TextField\n                        className={classes.field}\n                        id=\"email\"\n                        label=\"E-mail\"\n                        variant=\"filled\"\n                        value={email}\n                        onChange={handleEmailChange}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardTimePicker\n                            className={classes.field}\n                            ampm={false}\n                            inputVariant={'filled'}\n                            fullWidth\n                            label={'Время самовывоза'}\n                            value={time}\n                            onChange={handleDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n                <div className={classes.row}>\n                    <TextField\n                        multiline\n                        rows=\"5\"\n                        className={classes.field}\n                        id=\"comment\"\n                        label=\"Комментарий\"\n                        value={comment}\n                        onChange={handleCommentChange}\n                        variant=\"filled\"\n                    />\n                </div>\n                <div className={classes.row}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.field}\n                        variant=\"contained\"\n                    >\n                        Подтвердить\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","//Core\nimport React, { useEffect, useState } from 'react';\n// Instruments\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router';\nimport { routes } from '../../routes';\n\n// Components\nimport OrderForm from '../../components/OrderForm';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n}));\n\nexport default function Restaurants () {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [ orderInfo, setOrderInfo ] = useState(null);\n\n    useEffect(() => {\n        const { location : { state } } = history;\n\n        if (!state) history.replace(routes.restaurants);\n        else setOrderInfo(state);\n\n    }, [history]);\n\n    return (\n        <div className={classes.root}>\n            <OrderForm orderInfo={orderInfo}/>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const DishCountDialog = ({ title, isOpen, setOpen, count, setCount, max, click }) => {\n\n    const handleChangeValue = ( { target: { value } }) => {\n        const maximum = max || 100;\n        if (Number(value) > maximum) {\n            setCount(maximum);\n        } else {\n            setCount(Number(value));\n        }\n    }\n\n    return (\n        <Dialog\n            open={isOpen}\n            disableBackdropClick\n            disableEscapeKeyDown\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                Укажите количество для {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText\n                    style={{ display: 'flex', justifyContent: 'flex-end' }}\n                    id=\"alert-dialog-description\"\n                >\n                    <TextField\n                        value={count}\n                        inputProps={{ max: max ?? 100, min: 1, style: {textAlign: 'center'}}}\n                        onChange={handleChangeValue}\n                        fullWidth\n                        type=\"tel\"\n                    />\n                    <Button\n                        style={{ marginLeft: '20px' }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        onClick={click}\n                    >\n                        Подтвердить\n                    </Button>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport {\n    Card,\n    Grid,\n    Typography,\n    Checkbox,\n    makeStyles,\n    IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        fontWeight: 'bold',\n    },\n    image: {\n        maxWidth: '100%',\n        height: 190,\n    },\n    card: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(1),\n        color: theme.palette.text.secondary,\n        cursor: 'pointer',\n    },\n    content: {\n        padding: theme.spacing(1),\n        position: 'relative',\n    },\n    description: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: theme.spacing(1),\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    delete: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}));\n\nexport default function DishCard({\n    handleChange,\n    onDelete,\n    id,\n    title,\n    description,\n    checked,\n    price,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Card onClick={handleChange} className={classes.card}>\n            <Grid container direction={'row'}>\n                <Grid item xs={4}>\n                    <img\n                        className={classes.image}\n                        alt={'alt'}\n                        src={`${process.env.REACT_APP_PLACE_API_BASE_URL}/place/product/image?id=${id}`}\n                    />\n                </Grid>\n                <Grid className={classes.content} item xs={8}>\n                    <Typography\n                        className={classes.title}\n                        variant={'h5'}\n                        gutterBottom\n                    >\n                        {title}\n                    </Typography>\n                    <div className={classes.description}>\n                        <span>{description}</span>\n                    </div>\n                    <div\n                        className={classes.description}\n                        style={{ justifyContent: 'flex-end' }}\n                    >\n                        <Typography variant={'h4'} style={{ color: '#ff7043' }}>\n                            {`Price ${price}`}\n                        </Typography>\n                    </div>\n                    {handleChange && (\n                        <Checkbox\n                            className={classes.checkbox}\n                            checked={checked}\n                            onChange={handleChange}\n                            size={'medium'}\n                            color={'primary'}\n                            value=\"primary\"\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    )}\n                    {onDelete && (\n                        <IconButton\n                            className={classes.delete}\n                            onClick={onDelete}\n                        >\n                            <DeleteIcon color=\"primary\" />\n                        </IconButton>\n                    )}\n                </Grid>\n            </Grid>\n        </Card>\n    );\n}\n","// Core\nimport React, { useState, useEffect } from 'react';\n// Instruments\nimport { Grid } from '@material-ui/core';\nimport { DishCountDialog } from '../DishCountDialog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pickDish, removeDish, selectPickedDishes } from '../../store';\nimport DishCard from '../DishCard';\n\nexport default function Dish({ id, title, price, description }) {\n    const [checked, setChecked] = useState(false);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [count, setCount] = useState(null);\n\n    const orderedDishes = useSelector(selectPickedDishes);\n\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n        const newChecked = !checked;\n        setChecked(newChecked);\n\n        if (newChecked) {\n            setIsDialogOpen(true);\n            setCount(1);\n        } else {\n            dispatch(removeDish(id, count));\n        }\n    };\n\n    useEffect(() => {\n        if (!orderedDishes.size) setChecked(false);\n    }, [id, orderedDishes]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(removeDish(id, count));\n        };\n    }, [count, dispatch, id]);\n\n    const pickDishHandler = () => {\n        setIsDialogOpen(false);\n        dispatch(pickDish(id, count));\n    };\n\n    return (\n        <Grid item xs={6}>\n            <DishCard\n                handleChange={handleChange}\n                id={id}\n                title={title}\n                description={description}\n                checked={checked}\n                price={price}\n            />\n            <DishCountDialog\n                title={title}\n                isOpen={isDialogOpen}\n                setOpen={setIsDialogOpen}\n                click={pickDishHandler}\n                setCount={setCount}\n                count={count}\n            />\n        </Grid>\n    );\n}\n","// Core\nimport React from 'react';\n// Instruments\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { useLocation } from 'react-router';\n// Components\nimport Dish from '../../components/Dish';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        alignSelf: 'center',\n    },\n    card: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function DishesList({ dishes }) {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const parentId = location.pathname.split('/')[1];\n\n    if (!dishes) return null;\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid container spacing={3}>\n                    {dishes\n                        .filter(({ place_id }) => +place_id === +parentId)\n                        .map((dish, index) => (\n                            <Dish key={index} {...dish} />\n                        ))}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\n\nimport { Typography, Button, Card, Chip } from '@material-ui/core';\nimport { shadows } from '@material-ui/system';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DishCountDialog } from '../DishCountDialog';\nimport { useHistory } from 'react-router';\nimport { routes } from '../../routes';\nimport { selectPickedDishes, removeDish } from '../../store';\nimport { useLocation } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        left: '10%',\n        bottom: 10,\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        boxShadow: shadows[1],\n        padding: 20,\n        paddingLeft: 50,\n        width: '80%',\n    },\n    button: {\n        position: \"absolute\",\n        right: 30,\n        top: '50%',\n        transform: 'translateY(-50%)',\n        width: 250,\n    }\n}));\n\nexport const OrderPopover = (props) => {\n    const classes = useStyles();\n\n    const orderedDishes = useSelector(selectPickedDishes);\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const getLabel = ( label, count ) => {\n        if (count > 1) {\n            return label + ' x ' + count;\n        }\n        return label;\n    }\n\n    const [isOpen, setOpen] = useState(false);\n    const [countToDelete, setCountToDelete] = useState(null);\n    const [maxInDialogValue, setMaxInDialogValue] = useState(null);\n\n    const [activeDish, setActiveDish] = useState(null);\n\n    const makeOrder = () => {\n        history.replace({\n            pathname: routes.order,\n            state: {\n                products: orderedDishes.toJS(),\n                placeId: location.pathname.split('/')[1],\n            },\n        });\n    };\n\n    const setDish = (dish) => {\n        const count = dish.get('count');\n\n        setMaxInDialogValue(count);\n        setCountToDelete(1);\n        setActiveDish(dish);\n        setOpen(true);\n    }\n\n    const deleteDish = (id, count) => {\n        dispatch(removeDish(id, count));\n        setOpen(false);\n    }\n\n    return (\n        <Card {...props} className={classes.root}>\n            <div\n                style={{\n                    width: '80%',\n                }}\n            >\n                <Typography variant=\"h6\">\n                    <span style={{ fontWeight: 'bold' }}>Ваш заказ:</span>&nbsp;\n                    <span>\n                        {orderedDishes.map(dish => {\n                            return (\n                                <Chip\n                                    style={{ marginRight: '10px' }}\n                                    label={getLabel(\n                                        dish.get('title'),\n                                        dish.get('count')\n                                    )}\n                                    onDelete={() =>\n                                        dish.get('count') > 1\n                                            ? setDish(dish)\n                                            : deleteDish(\n                                                  dish.get('id'),\n                                                  dish.get('count')\n                                              )\n                                    }\n                                />\n                            );\n                        })}\n                    </span>\n                </Typography>\n                <Typography variant=\"h6\">\n                    <span style={{ fontWeight: 'bold' }}>Цена:</span>&nbsp;\n                    <span>\n                        {orderedDishes.size\n                            ? orderedDishes\n                                  .map(\n                                      dish =>\n                                          dish.get('price') * dish.get('count')\n                                  )\n                                  .reduce((acc, value) => acc + value) + ' грн'\n                            : null}\n                    </span>\n                </Typography>\n            </div>\n            <div className={classes.button}>\n                <Button\n                    fullWidth\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    disabled={!orderedDishes.size}\n                    onClick={makeOrder}\n                >\n                    Заказать\n                </Button>\n            </div>\n            <DishCountDialog\n                isOpen={isOpen}\n                setOpen={setOpen}\n                count={countToDelete}\n                setCount={setCountToDelete}\n                title={'удаления'}\n                max={maxInDialogValue}\n                click={() => deleteDish(activeDish.get('id'), countToDelete)}\n            />\n        </Card>\n    );\n}\n","// Core\nimport React, { useEffect } from 'react';\n// Instruments\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getProducts,\n    selectAllDishes,\n    selectIsDishesLoading,\n    selectPickedDishes,\n} from '../../store';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Fade } from '@material-ui/core';\n// Components\nimport Loading from '../../components/Loading';\nimport DishesList from '../../components/DishesList';\nimport { OrderStepper } from '../../components/OrderStepper';\nimport { OrderPopover } from '../../components/OrderPopover';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    content: {\n        width: '100%',\n        maxWidth: '1380px',\n        marginBottom: 125,\n    },\n}));\n\nexport default function Dishes(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const dishes = useSelector(selectAllDishes);\n    const isLoading = useSelector(selectIsDishesLoading);\n\n    const orderedDishes = useSelector(selectPickedDishes);\n\n    useEffect(() => {\n        const restaurantId = props.match.params.restaurant;\n        dispatch(getProducts(restaurantId));\n    }, [dispatch, props.match.params.restaurant]);\n\n    if (isLoading) return <Loading />;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <div style={{ marginTop: '40px' }}>\n                    <OrderStepper activeStep={1} />\n                </div>\n                <Typography\n                    variant=\"h3\"\n                    style={{ marginTop: '10px', fontWeight: 'bold' }}\n                >\n                    Заказ:\n                </Typography>\n                <Typography\n                    variant=\"h6\"\n                    style={{ marginBottom: '10px', color: 'gray' }}\n                >\n                    Выберите блюда и наслаждайтесь\n                </Typography>\n                <DishesList dishes={dishes} />\n            </div>\n            <Fade in={Boolean(orderedDishes.size)}>\n                <OrderPopover />\n            </Fade>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { green } from '@material-ui/core/colors';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        fontSize: 20,\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nexport default function SnackBar({ hidden, message, variant, anchorOrigin }) {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(!hidden);\n    const handleClose = (_e, reason) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    };\n\n    const Icon = variantIcon[variant];\n\n    return (\n        <Snackbar\n            anchorOrigin={anchorOrigin}\n            open={open}\n            autoHideDuration={6000}\n            onClose={handleClose}\n        >\n            <SnackbarContent\n                className={classes[variant]}\n                aria-describedby=\"client-snackbar\"\n                message={\n                    <span id=\"client-snackbar\" className={classes.message}>\n                        <Icon className={classes.iconVariant} />\n                        {message}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={handleClose}\n                    >\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                ]}\n            />\n        </Snackbar>\n    );\n}\n","import React, {useCallback} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useDispatch} from 'react-redux';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {signIn} from '../../store';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInForm() {\n    const classes = useStyles();\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    const redirect = useCallback(() => history.replace(from), [history, from])\n\n    const dispatch = useDispatch();\n    const onSubmit = useCallback(e => {\n        const formData = new FormData(e.target);\n\n        const login = formData.get('email');\n        const password = formData.get('password');\n\n        dispatch(signIn({ login, password }, redirect))\n\n        e.preventDefault();\n    }, [dispatch, redirect]);\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Link href=\"/signUp\" variant=\"body2\">\n                        Don't have an account? Sign Up\n                    </Link>\n                </form>\n            </div>\n        </Container>\n    );\n}\n","import {useEffect, useCallback} from \"react\";\nimport {useHistory, useLocation} from \"react-router\";\nimport {useSelector} from \"react-redux\";\nimport {selectIsAuthenticated} from \"../store\";\n\nexport const useRedirectWhenAuthorized = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    const redirect = useCallback(() => history.replace(from), [history, from]);\n\n    const isAuthenticated = useSelector(selectIsAuthenticated);\n\n    useEffect(() => {\n        isAuthenticated && redirect();\n    }, [redirect, isAuthenticated]);\n}\n","import { useState, useCallback } from 'react';\n\nexport const useControlledInput = defaultValue => {\n    const [value, setValue] = useState(defaultValue);\n    const onChange = useCallback(e => setValue(e.target.value), []);\n    return [value, onChange, setValue];\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Loading from '../../components/Loading';\nimport SnackBar from '../../components/SnackBar';\nimport SignInForm from '../../components/SignInForm';\n\nimport {\n    selectIsUserDataLoading,\n    selectIsUserErrorExist,\n    selectUserDataErrorMessage,\n} from '../../store';\nimport { useRedirectWhenAuthorized } from '../../hooks';\n\nexport default function SignIn() {\n    const isLoading = useSelector(selectIsUserDataLoading);\n    const isError = useSelector(selectIsUserErrorExist);\n    const errorMessage = useSelector(selectUserDataErrorMessage);\n    useRedirectWhenAuthorized();\n\n    return isLoading ? (\n        <Loading />\n    ) : (\n        <>\n            <SnackBar\n                hidden={!isError}\n                variant=\"error\"\n                message={errorMessage}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n            />\n            <SignInForm />\n        </>\n    );\n}\n","import React, {useCallback} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useDispatch} from 'react-redux';\nimport {signUp} from '../../store';\nimport {useHistory} from 'react-router';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUpForm() {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const redirect = useCallback(() => history.push('/'), [history]);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = useCallback(e => {\n    const formData = new FormData(e.target);\n\n    const firstName = formData.get('firstName');\n    const lastName = formData.get('lastName');\n    const email = formData.get('email');\n    const password = formData.get('password');\n\n    dispatch(signUp({ firstName, lastName, email, password }, redirect));\n\n    e.preventDefault();\n  }, [dispatch, redirect])\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Link href=\"/signIn\" variant=\"body2\">\n            Already have an account? Sign in\n          </Link>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Loading from '../../components/Loading';\nimport SnackBar from '../../components/SnackBar';\nimport SignUpForm from '../../components/SignUpForm';\n\nimport {\n    selectIsUserDataLoading,\n    selectIsUserErrorExist,\n    selectUserDataErrorMessage,\n} from '../../store';\nimport { useRedirectWhenAuthorized } from '../../hooks';\n\nexport default function SignIn() {\n    const isLoading = useSelector(selectIsUserDataLoading);\n    const isError = useSelector(selectIsUserErrorExist);\n    const errorMessage = useSelector(selectUserDataErrorMessage);\n    useRedirectWhenAuthorized();\n\n    return isLoading ? (\n        <Loading />\n    ) : (\n        <>\n            <SnackBar\n                hidden={!isError}\n                variant=\"error\"\n                message={errorMessage}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n            />\n            <SignUpForm />\n        </>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        width: 600,\n        cursor: 'pointer',\n    },\n    content: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n}));\n\nexport default function ActionCard({ icon, caption, onAction }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card} onClick={onAction}>\n            <CardContent className={classes.content}>\n                {icon}\n                <Typography variant=\"h2\" component=\"h2\">\n                    {caption}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import React, { useCallback } from 'react';\nimport Container from '@material-ui/core/Container';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport StoreIcon from '@material-ui/icons/Store';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { selectIsUserProducer } from '../../store';\nimport ActionCard from '../../components/ActionCard';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router';\nimport { routes } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(5),\n    },\n    grid: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n\n    const history = useHistory();\n    const redirect = useCallback(path => history.push(path), [history]);\n\n    const iconProps = {\n        color: 'secondary',\n        style: { fontSize: 64 },\n    };\n\n    const homeActions = [\n        {\n            caption: 'Create order',\n            icon: <FastfoodIcon {...iconProps} />,\n            onAction: () => redirect(routes.restaurants),\n        },\n        {\n            caption: 'Orders history',\n            icon: <DescriptionIcon {...iconProps} />,\n            onAction: () => redirect(routes.orderHistory),\n        },\n        {\n            caption: 'Manage account',\n            icon: <AccountBoxIcon {...iconProps} />,\n            onAction: () => redirect(routes.account),\n        },\n    ];\n\n    const isUserProducer = useSelector(selectIsUserProducer);\n\n    if (isUserProducer) {\n        homeActions.push({\n            caption: 'Manage business',\n            icon: <StoreIcon {...iconProps} />,\n            onAction: () => redirect(routes.businessAccount),\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\n            <Grid\n                container\n                justify=\"center\"\n                className={classes.grid}\n                spacing={5}\n            >\n                {homeActions.map(props => (\n                    <Grid item key={props.caption}>\n                        <ActionCard {...props} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n        minWidth: 200,\n    },\n}));\n\nconst getTabId = index => `vertical-tab-${index}`;\nconst getTabPanelId = index => `vertical-tabpanel-${index}`;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Container\n            fixed\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={getTabPanelId(index)}\n            {...other}\n        >\n            {value === index && children}\n        </Container>\n    );\n}\n\nexport default function TabPanels({ panels, footer }) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (_e, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                className={classes.tabs}\n            >\n                {panels.map(({ label }, index) => (\n                    <Tab key={index} label={label} id={getTabId(index)} />\n                ))}\n            </Tabs>\n            {panels.map(({ component }, index) => (\n                <TabPanel key={index} value={value} index={index}>\n                    {component}\n                </TabPanel>\n            ))}\n            {footer}\n        </div>\n    );\n}\n","import React, { useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from '../../store';\n\nexport default function SignOutButton({ className }) {\n    const dispatch = useDispatch();\n    const onSignOut = useCallback(() => {\n        dispatch(signOut());\n    }, [dispatch]);\n\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={className}\n            onClick={onSignOut}\n        >\n            Sign out\n        </Button>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../store/selectors/user';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    list: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(5),\n        backgroundColor: theme.palette.grey[100],\n    },\n}));\n\nexport default function UserInfo({ caption = 'User Info' }) {\n    const classes = useStyles();\n\n    const { firstName, lastName, email } = useSelector(selectUserData);\n\n    return (\n        <div>\n            <Typography className={classes.caption} variant=\"h2\">\n                {caption}\n            </Typography>\n            <List className={classes.list}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <PersonIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={`Fist name: ${firstName}`} />\n                </ListItem>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <SupervisorAccountIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={`Last name: ${lastName}`} />\n                </ListItem>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <ContactMailIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={`Email: ${email}`} />\n                </ListItem>\n            </List>\n        </div>\n    );\n}\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    selectUserDataErrorMessage,\n    selectIsUserErrorExist,\n    selectIsUserDataLoading,\n    changeUserRole,\n} from '../../store';\nimport Loading from '../Loading';\nimport SnackBar from '../SnackBar';\nimport { useHistory } from 'react-router';\nimport { routes } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    grid: {\n        flexGrow: 1,\n        marginLeft: theme.spacing(2.5),\n        marginRight: theme.spacing(2.5),\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n}));\n\nexport default function StartAsProducer({ caption = 'Business opportunity' }) {\n    const classes = useStyles();\n\n    const isLoading = useSelector(selectIsUserDataLoading);\n    const isError = useSelector(selectIsUserErrorExist);\n    const errorMessage = useSelector(selectUserDataErrorMessage);\n\n    const history = useHistory();\n    const redirect = useCallback(() => {\n        history.push(routes.businessAccount);\n    }, [history]);\n\n    const dispatch = useDispatch();\n    const onClick = useCallback(() => {\n        dispatch(changeUserRole('producer', redirect));\n    }, [dispatch, redirect]);\n\n    return (\n        <div>\n            <Typography className={classes.caption} variant=\"h2\">\n                {caption}\n            </Typography>\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <Grid\n                    wrap=\"nowrap\"\n                    container\n                    className={classes.grid}\n                    spacing={5}\n                >\n                    <Grid item>\n                        <img\n                            alt=\"food\"\n                            src=\"https://media-cdn.tripadvisor.com/media/photo-s/19/66/aa/0b/faites-votre-choix-parmi.jpg\"\n                        />\n                    </Grid>\n                    <Grid item className={classes.content}>\n                        <Typography variant=\"body1\">\n                            You can easily expand your business with FoodHub for\n                            free! <br />\n                            {'Motiavation text '.repeat(20)}\n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={onClick}\n                        >\n                            Start as Producer\n                        </Button>\n                    </Grid>\n                    <SnackBar\n                        hidden={!isError}\n                        variant=\"error\"\n                        message={errorMessage}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                    />\n                </Grid>\n            )}\n        </div>\n    );\n}\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    selectUserDataErrorMessage,\n    selectIsUserErrorExist,\n    selectIsUserDataLoading,\n    changePassword,\n} from '../../store';\nimport SnackBar from '../SnackBar';\nimport { useControlledInput } from '../../hooks';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    paper: {\n        margin: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '50%',\n        minWidth: 400,\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    indicator: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: `calc(50% - 8px)`,\n    },\n    relativeWrap: {\n        position: 'relative',\n    },\n}));\n\nfunction Indicator({ isValid, hidden, className }) {\n    if (hidden) {\n        return null;\n    } else {\n        return isValid ? (\n            <CheckCircleIcon color=\"primary\" className={className} />\n        ) : (\n            <HighlightOffIcon color=\"secondary\" className={className} />\n        );\n    }\n}\n\nexport default function ChangePasswordForm({ caption = 'Change Password' }) {\n    const classes = useStyles();\n\n    const isLoading = useSelector(selectIsUserDataLoading);\n    const isError = useSelector(selectIsUserErrorExist);\n    const errorMessage = useSelector(selectUserDataErrorMessage);\n\n    const [oldPswdValue, onOldPswdChange] = useControlledInput('');\n    const [newPswdValue, onNewPswdChange] = useControlledInput('');\n    const [confirmPswdValue, onConfirmPswdChange] = useControlledInput('');\n\n    const isNewPswdValid = newPswdValue !== oldPswdValue;\n    const isConfirmPswdValid = newPswdValue === confirmPswdValue;\n\n    const isButtonDisabled =\n        !newPswdValue.length ||\n        !oldPswdValue.length ||\n        !confirmPswdValue.length ||\n        !isNewPswdValid ||\n        !isConfirmPswdValid;\n\n    const dispatch = useDispatch();\n    const onSubmit = useCallback(() => {\n        if (!isButtonDisabled) {\n            dispatch(changePassword(oldPswdValue, newPswdValue));\n        }\n    }, [dispatch, isButtonDisabled, newPswdValue, oldPswdValue]);\n\n    return (\n        <div>\n            <CssBaseline />\n            <Typography className={classes.caption} variant=\"h2\">\n                {caption}\n            </Typography>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <form className={classes.form} onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"old-password\"\n                        label=\"Old Password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={oldPswdValue}\n                        onChange={onOldPswdChange}\n                    />\n                    <div className={classes.relativeWrap}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"new-password\"\n                            label=\"New Password\"\n                            type=\"password\"\n                            value={newPswdValue}\n                            onChange={onNewPswdChange}\n                        />\n                        <Indicator\n                            hidden={!newPswdValue.length}\n                            isValid={isNewPswdValid}\n                            className={classes.indicator}\n                        />\n                    </div>\n                    <div className={classes.relativeWrap}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"new-password-confirm\"\n                            label=\"Confirm New Password\"\n                            type=\"password\"\n                            value={confirmPswdValue}\n                            onChange={onConfirmPswdChange}\n                        />\n                        <Indicator\n                            hidden={!confirmPswdValue.length}\n                            isValid={isConfirmPswdValid}\n                            className={classes.indicator}\n                        />\n                    </div>\n                    {isLoading ? (\n                        <CircularProgress\n                            className={classes.submit}\n                            color=\"secondary\"\n                        />\n                    ) : (\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={isButtonDisabled}\n                        >\n                            Change Password\n                        </Button>\n                    )}\n                </form>\n            </div>\n            <SnackBar\n                hidden={!isError}\n                variant=\"error\"\n                message={errorMessage}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabPanels from '../../components/TabPanels';\nimport SignOutButton from '../../components/SignOutButton';\nimport UserInfo from '../../components/UserInfo';\nimport StartAsProducer from '../../components/StartAsProvider';\nimport ChangePasswordForm from '../../components/ChangePasswordForm';\nimport { useSelector } from 'react-redux';\nimport { selectIsUserProducer } from '../../store';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        left: theme.spacing(6),\n    },\n}));\n\nconst commonPanels = [\n    {\n        label: 'Account Info',\n        component: <UserInfo caption=\"Account Info\" />,\n    },\n    {\n        label: 'Change Password',\n        component: <ChangePasswordForm />,\n    },\n];\n\nconst customerPanels = [\n    {\n        label: 'Start as Producer',\n        component: <StartAsProducer />,\n    },\n];\n\nconst producerPanels = [];\n\nexport default function Account() {\n    const classes = useStyles();\n\n    const isProducer = useSelector(selectIsUserProducer);\n    const panels = commonPanels.concat(\n        isProducer ? producerPanels : customerPanels\n    );\n\n    return (\n        <TabPanels\n            panels={panels}\n            footer={<SignOutButton className={classes.button} />}\n        />\n    );\n}\n","import React, { useCallback, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport StoreIcon from '@material-ui/icons/Store';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { addPlace, selectIsPlacesLoading } from '../../store';\nimport { routes } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    input: {\n        display: 'none',\n    },\n    uploadContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function AddPlaceForm() {\n    const classes = useStyles();\n\n    const history = useHistory();\n    const redirect = useCallback(() => history.push(routes.businessAccount), [\n        history,\n    ]);\n\n    const dispatch = useDispatch();\n    const onSubmit = useCallback(\n        e => {\n            const formData = new FormData(e.target);\n\n            const placeName = formData.get('place-name');\n            const address = formData.get('place-address');\n            const description = formData.get('place-description');\n            const placeImage = formData.get('place-picture');\n\n            dispatch(\n                addPlace(\n                    { placeName, description, address, placeImage },\n                    redirect\n                )\n            );\n\n            e.preventDefault();\n        },\n        [dispatch, redirect]\n    );\n\n    const [isFileLoading, setIsFileLoading] = useState(false);\n    const [fileName, setFileName] = useState('');\n\n    const onChange = useCallback(e => {\n        const file = e.currentTarget.files[0];\n\n        setFileName(file.name);\n        setIsFileLoading(true);\n\n        const reader = new FileReader(file);\n        reader.addEventListener('load', () => setIsFileLoading(false));\n        reader.readAsDataURL(file);\n    }, []);\n\n    const isProcessing = useSelector(selectIsPlacesLoading);\n\n    return (\n        <Container component=\"main\" maxWidth=\"md\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <StoreIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Add Place\n                </Typography>\n                <form className={classes.form} onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"place-name\"\n                        label=\"Place Name\"\n                        name=\"place-name\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"place-address\"\n                        label=\"Place Address\"\n                        name=\"place-address\"\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        multiline\n                        rows=\"4\"\n                        name=\"place-description\"\n                        label=\"Place Description\"\n                        id=\"place-description\"\n                    />\n                    <div className={classes.uploadContainer}>\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"place-picture\"\n                            name=\"place-picture\"\n                            type=\"file\"\n                            onChange={onChange}\n                        />\n                        <label htmlFor=\"place-picture\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                            >\n                                Upload\n                            </Button>\n                        </label>\n                        {fileName && (\n                            <Typography\n                                className={classes.fileName}\n                                variant=\"body1\"\n                            >\n                                {fileName}\n                            </Typography>\n                        )}\n                        {isFileLoading && (\n                            <CircularProgress size={20} color=\"secondary\" />\n                        )}\n                    </div>\n                    {isProcessing ? (\n                        <CircularProgress\n                            className={classes.submit}\n                            color=\"primary\"\n                        />\n                    ) : (\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Add Place\n                        </Button>\n                    )}\n                </form>\n            </div>\n        </Container>\n    );\n}\n","import React from 'react';\nimport AddPlaceForm from '../../components/AddPlaceForm';\n\nexport default function AddPlace() {\n    return <AddPlaceForm />;\n}\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Restaurant from '../Restaurant';\nimport Loading from '../Loading';\nimport {\n    selectProducerPlaces,\n    selectIsPlacesLoading,\n} from '../../store/selectors/place';\nimport { useHistory } from 'react-router';\nimport { routes } from '../../routes';\nimport Button from '@material-ui/core/Button';\nimport { deletePlace } from '../../store';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    list: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(5),\n    },\n    button: {\n        margin: theme.spacing(5),\n    },\n}));\n\nexport default function PlacesList() {\n    const classes = useStyles();\n    const places = useSelector(selectProducerPlaces);\n    const isLoading = useSelector(selectIsPlacesLoading);\n\n    const history = useHistory();\n    const addPlace = useCallback(() => {\n        history.push(routes.placeAdd);\n    }, [history]);\n\n    const dispatch = useDispatch();\n    const createOnDelete = useCallback(\n        id => () => {\n            dispatch(deletePlace(id));\n        },\n        [dispatch]\n    );\n\n    return (\n        <div className={classes.list}>\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <>\n                    <Typography className={classes.caption} variant=\"h2\">\n                        Places List\n                    </Typography>\n                    {places.map(place => (\n                        <Restaurant\n                            key={place.id}\n                            id={place.id}\n                            name={place['place_name']}\n                            image={`${process.env.REACT_APP_PLACE_API_BASE_URL}/place/image?id=${place.id}`}\n                            description={place.description}\n                            address={place.address}\n                            onDelete={createOnDelete(place.id)}\n                            asLink={false}\n                        />\n                    ))}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={addPlace}\n                        className={classes.button}\n                    >\n                        Add Place\n                    </Button>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport DishCard from '../DishCard';\nimport { Typography } from '@material-ui/core';\nimport { deleteProduct } from '../../store';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    list: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(5),\n    },\n    button: {\n        margin: theme.spacing(5),\n    },\n}));\n\nexport default function ProductsList({ place, dishes }) {\n    const classes = useStyles();\n\n    const history = useHistory();\n    const redirect = useCallback(path => history.push(path), [history]);\n    const createOnClick = useCallback(\n        id => () => redirect(`/${id}/product/add`),\n        [redirect]\n    );\n\n    const dispatch = useDispatch();\n    const createOnDelete = useCallback(\n        id => () => {\n            dispatch(deleteProduct(id));\n        },\n        [dispatch]\n    );\n\n    return (\n        <div className={classes.list}>\n            <Typography variant=\"h5\">{`Place: ${place['place_name']}`}</Typography>\n            {dishes.map(dish => (\n                <DishCard\n                    key={dish.id}\n                    onDelete={createOnDelete(dish.id)}\n                    id={dish.id}\n                    title={dish.title}\n                    description={dish.description}\n                    price={dish.price}\n                />\n            ))}\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                onClick={createOnClick(place.id)}\n                className={classes.button}\n            >\n                {`Add Product to ${place['place_name']}`}\n            </Button>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductsList from '../ProductsList';\nimport Loading from '../Loading';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport {\n    selectIsDishesLoading,\n    selectDishesByPlace,\n    getProducts,\n} from '../../store';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n    list: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(5),\n    },\n}));\n\nexport default function ProductListByPlaces() {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    const dishesByPlace = useSelector(selectDishesByPlace);\n    const isLoading = useSelector(selectIsDishesLoading);\n\n    return (\n        <div className={classes.list}>\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <>\n                    <Typography className={classes.caption} variant=\"h2\">\n                        Products\n                    </Typography>\n                    {dishesByPlace.map(entry => (\n                        <ProductsList\n                            key={entry.getIn(['place', 'id'])}\n                            place={entry.getIn(['place'])}\n                            dishes={entry.getIn(['dishes'])}\n                        />\n                    ))}\n                </>\n            )}\n        </div>\n    );\n}\n","import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        margin: theme.spacing(5),\n    },\n}));\n\nexport default function ProducerOrders() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.caption} variant=\"h2\">\n                Orders\n            </Typography>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabPanels from '../../components/TabPanels';\nimport SignOutButton from '../../components/SignOutButton';\nimport PlacesList from '../../components/PlacesList';\nimport { useDispatch } from 'react-redux';\nimport { fetchPlaces } from '../../store';\nimport ProductListByPlaces from '../../components/ProductListByPlaces';\nimport ProducerOrders from '../../components/ProducerOrders';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        left: theme.spacing(6),\n    },\n}));\n\nconst panels = [\n    {\n        label: 'Places',\n        component: <PlacesList />,\n    },\n    {\n        label: 'Products',\n        component: <ProductListByPlaces />,\n    },\n    {\n        label: 'Orders',\n        component: <ProducerOrders />,\n    },\n];\n\nexport default function BusinessAccount() {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchPlaces());\n    }, [dispatch]);\n\n    return (\n        <TabPanels\n            panels={panels}\n            footer={<SignOutButton className={classes.button} />}\n        />\n    );\n}\n","import React, { useCallback, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport StoreIcon from '@material-ui/icons/Store';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { addProduct } from '../../store';\nimport { routes } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    input: {\n        display: 'none',\n    },\n    uploadContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function AddProductForm() {\n    const classes = useStyles();\n\n    const history = useHistory();\n    const placeId = history.location.pathname.split('/')[1];\n    const redirect = useCallback(() => history.push(routes.businessAccount), [\n        history,\n    ]);\n\n    const dispatch = useDispatch();\n    const onSubmit = useCallback(\n        e => {\n            const formData = new FormData(e.target);\n\n            const productName = formData.get('product-name');\n            const description = formData.get('product-description');\n            const productImage = formData.get('product-picture');\n            const productPrice = formData.get('product-price');\n\n            dispatch(\n                addProduct(\n                    {\n                        placeId,\n                        productName,\n                        description,\n                        productImage,\n                        price: productPrice,\n                    },\n                    redirect\n                )\n            );\n\n            e.preventDefault();\n        },\n        [dispatch, placeId, redirect]\n    );\n\n    const [isFileLoading, setIsFileLoading] = useState(false);\n    const [fileName, setFileName] = useState('');\n\n    const onChange = useCallback(e => {\n        const file = e.currentTarget.files[0];\n\n        setFileName(file.name);\n        setIsFileLoading(true);\n\n        const reader = new FileReader(file);\n        reader.addEventListener('load', () => setIsFileLoading(false));\n        reader.readAsDataURL(file);\n    }, []);\n\n    return (\n        <Container component=\"main\" maxWidth=\"md\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <StoreIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Add Product\n                </Typography>\n                <form className={classes.form} onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"product-name\"\n                        label=\"Product Name\"\n                        name=\"product-name\"\n                        autoFocus\n                    />\n                    <TextField\n                        type=\"number\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"product-price\"\n                        label=\"Product Price\"\n                        name=\"product-price\"\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        multiline\n                        rows=\"4\"\n                        name=\"product-description\"\n                        label=\"Product Description\"\n                        id=\"product-description\"\n                    />\n                    <div className={classes.uploadContainer}>\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"product-picture\"\n                            name=\"product-picture\"\n                            type=\"file\"\n                            onChange={onChange}\n                        />\n                        <label htmlFor=\"product-picture\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                            >\n                                Upload\n                            </Button>\n                        </label>\n                        {fileName && (\n                            <Typography\n                                className={classes.fileName}\n                                variant=\"body1\"\n                            >\n                                {fileName}\n                            </Typography>\n                        )}\n                        {isFileLoading && (\n                            <CircularProgress color=\"secondary\" />\n                        )}\n                    </div>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Add Product\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n","import React from 'react';\nimport AddProductForm from '../../components/AddProductForm';\n\nexport default function AddProduct() {\n    return <AddProductForm />;\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport const OrderHistoryList = ({ ordersHistory }) => {\n    const headers = ordersHistory && ordersHistory[0] && Object.keys(ordersHistory[0]);\n\n    if (!ordersHistory || !headers) return null;\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {headers.map(header => (\n                            <TableCell>{header}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {ordersHistory\n                        .sort(\n                            (a, b) =>\n                                new Date(a.order_date) - new Date(b.order_date)\n                        )\n                        .map((row, index) => (\n                            <TableRow key={index}>\n                                {headers.map(header => {\n                                    return <TableCell>{row[header]}</TableCell>;\n                                })}\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, { useEffect } from 'react';\nimport {\n    getOrdersByCustomer,\n    selectCustomerOrders,\n    selectIsCustomerOrdersLoading,\n} from '../../store';\nimport Loading from '../../components/Loading';\nimport { OrderHistoryList } from  '../../components/OrderHistoryList';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function OrderHistory () {\n    const dispatch = useDispatch();\n\n    const customerOrders = useSelector(selectCustomerOrders);\n    const isLoading = useSelector(selectIsCustomerOrdersLoading);\n\n    useEffect(() => {\n        dispatch(getOrdersByCustomer());\n    }, [dispatch]);\n\n    return isLoading ? <Loading/> : <OrderHistoryList ordersHistory={customerOrders}/>;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M361.195,79.387v19.99h27.861c1.086,0,2.004,0.378,2.759,1.131c0.752,0.756,1.13,1.675,1.13,2.76 c0,1.086-0.378,1.99-1.13,2.714c-0.755,0.725-1.673,1.085-2.759,1.085h-27.861v24.151c0,1.146-0.406,2.111-1.221,2.896 c-0.816,0.782-1.795,1.175-2.941,1.175c-1.146,0-2.109-0.393-2.892-1.175c-0.788-0.784-1.177-1.749-1.177-2.896V75.86 c0-1.146,0.389-2.126,1.177-2.939c0.782-0.814,1.746-1.222,2.892-1.222h35.188c1.085,0,2.004,0.377,2.759,1.13 c0.754,0.756,1.131,1.674,1.131,2.761c0,1.085-0.377,1.989-1.131,2.713c-0.755,0.724-1.674,1.085-2.759,1.085H361.195z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M419.631,87.799c6.994,0,12.602,2.202,16.824,6.604c4.22,4.464,6.33,10.254,6.33,17.368 c0,7.116-2.11,12.904-6.33,17.367c-4.223,4.402-9.83,6.604-16.824,6.604c-7.057,0-12.665-2.201-16.826-6.604 c-4.223-4.402-6.333-10.19-6.333-17.367c0-7.176,2.11-12.965,6.333-17.368C406.966,90.001,412.574,87.799,419.631,87.799z  M409.543,124.48c1.416,1.297,3.016,2.246,4.793,2.85c1.779,0.604,3.528,0.904,5.25,0.904c1.716,0,3.465-0.301,5.244-0.904 c1.777-0.604,3.393-1.538,4.841-2.805c3.256-2.953,4.884-7.236,4.884-12.845c0-5.427-1.628-9.647-4.884-12.663 c-2.716-2.472-6.063-3.709-10.04-3.709c-6.514,0-11.037,2.925-13.568,8.774c-0.906,2.11-1.357,4.657-1.357,7.644 c0,2.984,0.451,5.533,1.357,7.644C406.966,121.48,408.127,123.184,409.543,124.48z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M471.007,87.799c6.993,0,12.602,2.202,16.824,6.604c4.22,4.464,6.33,10.254,6.33,17.368 c0,7.116-2.11,12.904-6.33,17.367c-4.223,4.402-9.831,6.604-16.824,6.604c-7.058,0-12.665-2.201-16.827-6.604 c-4.223-4.402-6.332-10.19-6.332-17.367c0-7.176,2.109-12.965,6.332-17.368C458.342,90.001,463.949,87.799,471.007,87.799z  M460.919,124.48c1.415,1.297,3.016,2.246,4.792,2.85c1.779,0.604,3.529,0.904,5.25,0.904c1.717,0,3.466-0.301,5.245-0.904 c1.776-0.604,3.392-1.538,4.841-2.805c3.255-2.953,4.884-7.236,4.884-12.845c0-5.427-1.629-9.647-4.884-12.663 c-2.716-2.472-6.063-3.709-10.04-3.709c-6.515,0-11.037,2.925-13.568,8.774c-0.906,2.11-1.358,4.657-1.358,7.644 c0,2.984,0.452,5.533,1.358,7.644C458.342,121.48,459.503,123.184,460.919,124.48z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M538.394,128.867c-4.462,4.584-9.621,6.875-15.469,6.875c-5.787,0-10.795-2.049-15.014-6.15 c-4.584-4.523-6.875-10.463-6.875-17.82c0-7.236,2.291-13.146,6.875-17.729c4.158-4.161,9.166-6.242,15.014-6.242 s11.007,2.293,15.469,6.875V72.512c0-1.205,0.392-2.199,1.177-2.984c0.782-0.782,1.761-1.176,2.938-1.176s2.155,0.394,2.942,1.176 c0.783,0.785,1.174,1.779,1.174,2.984v58.706c0,1.146-0.391,2.111-1.174,2.896c-0.787,0.782-1.766,1.175-2.942,1.175 s-2.155-0.393-2.938-1.175c-0.785-0.784-1.177-1.749-1.177-2.896V128.867z M538.394,102.273c-4.104-4.522-8.863-6.784-14.292-6.784 c-6.876,0-11.429,3.075-13.659,9.228c-0.785,2.051-1.174,4.401-1.174,7.055c0,5.188,1.413,9.258,4.25,12.211 c2.592,2.715,6.118,4.07,10.583,4.07c5.429,0,10.188-2.261,14.292-6.783V102.273z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  stroke: \"#FFFFF\",\n  strokeWidth: 6,\n  d: \"M605.511,71.247c1.144,0,2.128,0.408,2.94,1.222 c0.813,0.813,1.222,1.794,1.222,2.938v55.812c0,1.146-0.408,2.111-1.222,2.896c-0.813,0.782-1.797,1.175-2.94,1.175 c-1.146,0-2.112-0.393-2.895-1.175c-0.782-0.784-1.176-1.749-1.176-2.896v-24.061h-34.281v24.061c0,1.146-0.407,2.111-1.223,2.896 c-0.814,0.782-1.794,1.175-2.939,1.175c-1.146,0-2.11-0.393-2.893-1.175c-0.787-0.784-1.176-1.749-1.176-2.896V75.407 c0-1.145,0.389-2.125,1.176-2.938c0.782-0.813,1.746-1.222,2.893-1.222c1.146,0,2.125,0.408,2.939,1.222 c0.815,0.813,1.223,1.794,1.223,2.938v24.063h34.281V75.407c0-1.145,0.394-2.125,1.176-2.938S604.365,71.247,605.511,71.247z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  stroke: \"#FFFFF\",\n  strokeWidth: 6,\n  d: \"M645.855,128.144c5.305,0,10.252-2.896,14.835-8.686V92.323 c0-1.145,0.406-2.11,1.222-2.895c0.813-0.783,1.792-1.176,2.938-1.176c1.146,0,2.11,0.393,2.896,1.176 c0.784,0.784,1.176,1.75,1.176,2.895v38.806c0,1.207-0.392,2.201-1.176,2.985c-0.785,0.782-1.749,1.175-2.896,1.175 c-1.146,0-2.125-0.393-2.938-1.175c-0.815-0.784-1.222-1.778-1.222-2.985v-3.709c-2.413,2.533-4.492,4.313-6.244,5.336 c-3.438,1.99-6.708,2.986-9.813,2.986c-3.107,0-5.653-0.469-7.643-1.402c-1.991-0.935-3.68-2.216-5.067-3.845 c-2.835-3.315-4.251-7.476-4.251-12.481v-25.69c0-1.145,0.409-2.11,1.222-2.895c0.813-0.783,1.792-1.176,2.938-1.176 c1.146,0,2.109,0.393,2.896,1.176c0.783,0.784,1.177,1.75,1.177,2.895v24.785c0,3.438,0.768,6.137,2.307,8.095 C639.747,127.165,642.297,128.144,645.855,128.144z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  stroke: \"#FFFFF\",\n  strokeWidth: 6,\n  d: \"M695.061,94.674c4.462-4.582,9.618-6.875,15.469-6.875 c5.848,0,10.855,2.081,15.015,6.242c4.583,4.583,6.875,10.493,6.875,17.729c0,7.357-2.292,13.297-6.875,17.82 c-4.22,4.102-9.242,6.15-15.06,6.15c-5.82,0-10.962-2.291-15.424-6.875v2.352c0,1.146-0.394,2.111-1.176,2.896 c-0.782,0.782-1.762,1.175-2.938,1.175c-1.176,0-2.157-0.393-2.939-1.175c-0.785-0.784-1.177-1.749-1.177-2.896V72.512 c0-1.205,0.392-2.199,1.177-2.984c0.782-0.782,1.764-1.176,2.939-1.176c1.177,0,2.156,0.394,2.938,1.176 c0.782,0.785,1.176,1.779,1.176,2.984V94.674z M695.061,121.269c4.102,4.522,8.864,6.783,14.293,6.783 c6.875,0,11.456-3.074,13.747-9.226c0.727-2.05,1.088-4.401,1.088-7.056c0-5.187-1.388-9.256-4.162-12.212 c-2.654-2.714-6.211-4.07-10.673-4.07c-5.429,0-10.191,2.262-14.293,6.784V121.269z\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M123.418,85.511l-0.626,1.743c-0.529-0.19-1.059-0.367-1.59-0.531c-0.639,0.925-1.244,1.875-1.813,2.85 c0.771,0.217,1.541,0.455,2.308,0.729l-0.625,1.744l-0.623,1.74c-0.939-0.337-1.885-0.618-2.834-0.855 c-0.624,1.312-1.185,2.66-1.68,4.037c1.022,0.23,2.043,0.523,3.054,0.886l-0.626,1.743l-0.625,1.74 c-0.966-0.347-1.938-0.611-2.915-0.816c-0.246,0.922-0.465,1.855-0.651,2.8h4.159c4.007-18.228,20.275-31.911,39.687-31.913 c19.411,0.002,35.681,13.686,39.687,31.913h4.162c-0.12-0.602-0.252-1.198-0.396-1.792c-0.916,0.191-1.83,0.438-2.736,0.755 l-0.604-1.728l-0.603-1.723c0.972-0.34,1.952-0.611,2.934-0.828c-0.453-1.369-0.973-2.707-1.55-4.014 c-0.934,0.228-1.864,0.496-2.788,0.82l-0.603-1.725l-0.604-1.723c0.777-0.272,1.56-0.507,2.341-0.719 c-0.729-1.334-1.528-2.627-2.386-3.875c-0.846,0.229-1.689,0.48-2.529,0.773l-0.602-1.721l-0.602-1.727 c0.459-0.16,0.92-0.304,1.38-0.446c-8.207-9.952-20.624-16.308-34.499-16.309h-0.002h-0.001 c-13.855,0.001-26.258,6.337-34.463,16.265c0.163,0.057,0.326,0.105,0.487,0.163L123.418,85.511z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M158.021,74.963h-0.002h-0.001c-17.441,0-32.1,12.106-36.036,28.356h4.197 c3.838-13.985,16.652-24.292,31.84-24.292s28.003,10.307,31.841,24.292h4.194C190.118,87.07,175.461,74.963,158.021,74.963z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M158.021,83.766h-0.002h-0.001c-12.549,0.002-23.206,8.22-26.892,19.554h4.313 c3.511-9.051,12.306-15.487,22.58-15.487s19.07,6.437,22.58,15.487h4.315C181.225,91.986,170.566,83.768,158.021,83.766z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M121.203,86.723c0.531,0.164,1.061,0.341,1.59,0.531l0.626-1.743l0.623-1.742 c-0.161-0.058-0.324-0.106-0.487-0.163c-19.259-6.643-40.247,2.057-49.407,19.714h4.239 C86.948,88.764,104.651,81.606,121.203,86.723z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M117.616,92.93c0.949,0.237,1.895,0.519,2.834,0.855l0.623-1.74l0.625-1.744 c-0.767-0.273-1.537-0.512-2.308-0.729c-14.217-3.99-29.205,1.816-37.187,13.747h4.593 C94.016,94.306,106.042,90.016,117.616,92.93z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M114.825,100.52c0.977,0.205,1.949,0.47,2.915,0.816l0.625-1.74l0.626-1.743 c-1.011-0.362-2.032-0.655-3.054-0.886c-8.477-1.909-17.167,0.65-23.268,6.353h6.076 C103.444,100.438,109.18,99.331,114.825,100.52z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M191.742,85.823l0.602,1.721c0.84-0.293,1.684-0.545,2.529-0.773c15.921-4.312,32.638,2.69,40.897,16.55 h4.184c-8.877-16.903-28.806-25.442-47.433-19.67c-0.46,0.143-0.921,0.286-1.38,0.446L191.742,85.823z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M197.258,90.645c-0.781,0.212-1.563,0.446-2.341,0.719l0.604,1.723l0.603,1.725 c0.924-0.324,1.854-0.593,2.788-0.82c10.933-2.664,22.222,1.171,29.356,9.329h4.665C224.983,92.316,210.81,86.992,197.258,90.645 z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M200.462,98.004c-0.981,0.217-1.962,0.488-2.934,0.828l0.603,1.723l0.604,1.728 c0.906-0.317,1.82-0.563,2.736-0.755c4.872-1.019,9.805-0.306,14.062,1.792h6.66C216.291,98.413,208.297,96.278,200.462,98.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M533.418,145.477c0-2.037,0.195-2.69-0.016-2.69h-1.37l-219.337,0.015l-1.381-63.036 c5.67-1.711,9.563-6.903,9.563-12.9V46.813c0-2.191-1.783-3.975-3.975-3.975c-0.08,0-0.162,0.006-0.242,0.012l-0.025,0.001 c-2.078,0.139-3.707,1.879-3.707,3.962l-0.008,15.021c0,1.287-0.438,1.938-1.299,1.938c-0.855,0-1.291-0.651-1.291-1.938v-15.34 c0-2.017-1.639-3.656-3.654-3.656s-3.656,1.64-3.656,3.656v15.34c0,1.291-0.438,1.944-1.305,1.944 c-0.854,0-1.291-0.653-1.291-1.944l-0.002-15.021c0-2.08-1.625-3.82-3.699-3.962l-0.031-0.001 c-0.08-0.006-0.162-0.012-0.244-0.012c-2.189,0-3.975,1.783-3.975,3.975l0.008,1.576v11.037 c-0.004,0.082-0.008,0.165-0.008,0.248v7.19c0,5.997,3.893,11.19,9.564,12.9l-1.381,63.036h-22.559l-1.373-62.508 c6.428-1.842,9.555-7.881,9.555-18.428c0-4.827-1.65-9.572-4.643-13.365c-2.801-3.545-6.373-5.662-9.559-5.662 c-6.566,0-14.199,8.311-14.199,19.027c0,10.08,3.299,16.41,9.557,18.366l-1.377,62.569h-57.787 c23.437-8.612,37.302-22.483,37.302-37.574c0-0.082-0.006-0.168-0.018-0.254c-0.115-0.933-0.912-1.653-1.873-1.653H69.374 c-1.003,0-1.823,0.782-1.885,1.769c-0.003,0.045-0.005,0.096-0.005,0.139c0,15.091,13.864,28.962,37.3,37.574H29.103 c-0.031,0.282-0.068,0.563-0.1,0.846c0.057,1.15-0.011,2.306-0.213,3.437h7.633c0.122,0,0.239-0.006,0.357-0.016h69.309 c0.421,0,0.81-0.126,1.14-0.336c0.001,0.001,0.001,0.001,0.002,0.002l0.007-0.007c0.229-0.147,0.428-0.338,0.587-0.561 l2.261-2.157h-0.071c0.056-0.027,0.107-0.062,0.161-0.096l0.625-0.672c0.137-0.247,0.222-0.524,0.237-0.819 c0.042-0.849-0.488-1.62-1.296-1.887c-23.033-7.583-37.194-19.979-38.399-33.438h170.369c-0.002,0.013-0.004,0.028-0.006,0.04 c-0.059,0.652-0.158,1.301-0.275,1.946c-2.355,12.686-16.225,24.242-38.12,31.451c-0.809,0.266-1.338,1.039-1.296,1.888 c0.017,0.344,0.126,0.665,0.305,0.938c0,0,3.107,3.707,3.455,3.707h61.49c0.498,0,0.904-0.955,0.904-2.134 c0-0.344-0.039-0.664-0.1-0.952l0.1-4.511l0.123-5.583l1.211-55.218l-0.793-0.194c-5.838-1.433-8.797-7.021-8.797-16.61 c0-9.411,6.654-16.992,12.164-16.992c4.898,0,12.166,7.137,12.166,16.992c0,10.022-2.789,15.313-8.777,16.647l-0.813,0.182 l1.211,55.193l0.123,5.583l0.09,4.101c-0.055,0.37-0.09,0.842-0.09,1.362c0,1.179,0.17,2.134,0.383,2.134h25.906 c0.211,0,0.381-0.955,0.381-2.134c0-0.115-0.002-0.226-0.006-0.335l0.029-0.025c-0.014-0.087-0.023-0.174-0.023-0.261 l0.107-4.842l0.049-1.392l0.074-2.74l-0.002-1.451l1.219-55.699l-0.799-0.19c-5.18-1.227-8.797-5.805-8.797-11.134v-7.19 c0-0.061,0.002-0.121,0.004-0.179l0.004-12.124l-0.006-0.662c0.057-1.021,0.902-1.836,1.936-1.836 c0.033,0,0.064,0.005,0.096,0.006l0.041,0.004c1.01,0.068,1.803,0.916,1.803,1.93l0.002,15.021c0,2.455,1.275,3.98,3.326,3.98 c2.031,0,3.342-1.563,3.342-3.98v-15.34c0-0.895,0.727-1.621,1.619-1.621s1.619,0.727,1.619,1.621v15.34 c0,2.453,1.273,3.975,3.326,3.975c2.025,0,3.336-1.561,3.336-3.975l0.008-15.021c0-1.015,0.793-1.862,1.811-1.93l0.037-0.004 c0.031-0.001,0.061-0.006,0.09-0.006c1.068,0,1.938,0.871,1.938,1.939v20.052c0,5.327-3.617,9.907-8.795,11.134l-0.801,0.19 l1.219,55.699l-0.027,1.999l0.051,1.471l0.1,2.113l0.104,4.818c0,0.023-0.004,0.046-0.006,0.069c0,0-0.061,2.813,0.49,2.709 l222.322,0.104C533.709,147.172,533.418,146.656,533.418,145.477z\"\n})), React.createElement(\"polyline\", {\n  fill: \"#FFFFFF\",\n  points: \"30.438,142.813 27.813,142.813 27.813,147.094 29.813,147.094  \"\n})), React.createElement(\"polyline\", {\n  fill: \"#FFFFFF\",\n  points: \"531.201,147.125 536.525,147.125 542.61,147.125 772.711,147.125 772.711,142.782 527.626,142.782  \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"826.564px\",\n    height: \"211.489px\",\n    viewBox: \"0 0 826.564 211.489\",\n    enableBackground: \"new 0 0 826.564 211.489\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.f4525cfc.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ReactComponent as Logo } from './logo.svg';\nimport { routes } from '../../routes';\nimport { selectIsAuthenticated, selectIsUserProducer } from '../../store';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    logo: {\n        width: '300px',\n        height: '72px',\n    },\n    wrapper: {\n        flexGrow: 1,\n    },\n    navIcon: {\n        color: '#fff',\n    },\n}));\n\nconst navData = {\n    account: {\n        icon: <AccountCircleIcon />,\n        link: routes.account,\n    },\n    home: {\n        icon: <HomeIcon />,\n        link: routes.home,\n    },\n    businessAccount: {\n        icon: <BusinessCenterIcon />,\n        link: routes.businessAccount,\n    },\n};\n\nconst getNavData = ({ pathname }, isProducer) => {\n    const data = [];\n    if (isProducer && !pathname.match(routes.businessAccount)) {\n        data.push(navData.businessAccount);\n    }\n    if (!pathname.match(routes.account)) {\n        data.push(navData.account);\n    }\n    if (pathname !== routes.home) {\n        data.push(navData.home);\n    }\n    return data;\n};\n\nexport default function Bar() {\n    const classes = useStyles();\n\n    const location = useLocation();\n    const isProducer = useSelector(selectIsUserProducer);\n    const isAuthenticated = useSelector(selectIsAuthenticated);\n\n    const navigation = useMemo(() => getNavData(location, isProducer), [\n        location,\n        isProducer,\n    ]);\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <div className={classes.wrapper}>\n                        <Link to={routes.home}>\n                            <Logo className={classes.logo} />\n                        </Link>\n                    </div>\n                    {isAuthenticated &&\n                        navigation.map(({ icon, link }) => (\n                            <Link key={link} to={link}>\n                                <IconButton className={classes.navIcon}>\n                                    {icon}\n                                </IconButton>\n                            </Link>\n                        ))}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport SnackBar from '../SnackBar';\nimport { selectNotifications } from '../../store';\n\nexport default function Notifications() {\n    const notification = useSelector(selectNotifications);\n\n    return notification.map(({ id, type, message }) => (\n        <SnackBar key={id} variant={type} message={message} />\n    ));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store';\nimport App from './App';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { configureServices, preloadUserData } from '../services';\n\nimport { rootReducer } from './reducers';\nimport { signInSuccess, signInFailure } from './actions';\n\nexport default function configureStore(preloadedState) {\n    const services = configureServices();\n\n    const composedEnhancers = composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument(services))\n    );\n\n    const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n    preloadUserData(services.userAPI)\n        .then(user => store.dispatch(signInSuccess(user)))\n        .catch(() => store.dispatch(signInFailure()));\n\n    return store;\n}\n\nexport * from './actions';\nexport * from './commands';\nexport * from './selectors';\n","import Auth from './auth';\n\nimport UserService from './domains/user';\nimport RestaurantService from './domains/restaurant';\nimport DishService from './domains/dish';\nimport PlaceService from './domains/place';\nimport OrderService from './domains/order';\n\nexport function configureServices() {\n    return {\n        userAPI: new UserService(),\n        restaurantAPI: new RestaurantService(),\n        dishAPI: new DishService(),\n        placeAPI: new PlaceService(),\n        orderAPI: new OrderService(),\n    };\n}\n\nexport function preloadUserData(userAPI) {\n    return new Promise((resolve, reject) => {\n        if (Auth.token) {\n            userAPI\n                .loadUser()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            reject();\n        }\n    });\n}\n","// Core\nimport React from 'react';\n\n// Instruments\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport ProducerProtectedRoute from './components/ProducerProtectedRoute';\n\n// Pages\nimport { routes } from './routes';\n\nimport Restaurants from './pages/Restaurants';\nimport MakeOrder from './pages/MakeOrder';\nimport Dishes from './pages/Dishes';\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/SignUp';\nimport Home from './pages/Home';\nimport Account from './pages/Account';\nimport AddPlace from './pages/AddPlace';\nimport BusinessAccount from './pages/BusinessAccount';\nimport AddProduct from './pages/AddProduct';\nimport OrderHistory from './pages/OrderHistory';\n\n// Components\nimport AppBar from './components/AppBar';\nimport Notifications from './components/Notifications';\n\nexport default function App() {\n    return (\n        <>\n            <CssBaseline />\n            <Router>\n                <AppBar />\n                <Notifications />\n\n                <Switch>\n                    <Route exact path={routes.signIn} component={SignIn} />\n                    <Route exact path={routes.signUp} component={SignUp} />\n\n                    <ProtectedRoute exact path={routes.home} component={Home} />\n                    <ProtectedRoute\n                        exact\n                        path={routes.restaurants}\n                        component={Restaurants}\n                    />\n                    <ProtectedRoute\n                        exact\n                        path={routes.account}\n                        component={Account}\n                    />\n                    <ProtectedRoute\n                        exact\n                        path={routes.dishes}\n                        component={Dishes}\n                    />\n                    <ProtectedRoute\n                        exact\n                        path={routes.order}\n                        component={MakeOrder}\n                    />\n                    <ProtectedRoute\n                        exact\n                        path={routes.orderHistory}\n                        component={OrderHistory}\n                    />\n\n                    <ProducerProtectedRoute\n                        exact\n                        path={routes.businessAccount}\n                        component={BusinessAccount}\n                    />\n                    <ProducerProtectedRoute\n                        exact\n                        path={routes.placeAdd}\n                        component={AddPlace}\n                    />\n                    <ProducerProtectedRoute\n                        exact\n                        path={routes.productAdd}\n                        component={AddProduct}\n                    />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n"],"sourceRoot":""}